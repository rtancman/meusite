<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://www.rtancman.com.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.rtancman.com.br/" rel="alternate" type="text/html" /><updated>2020-12-03T21:08:44+00:00</updated><id>https://www.rtancman.com.br/feed.xml</id><title type="html">Raffael Tancman</title><subtitle>Carioca, Bodyboarder, gamer #apaixonadoPorLOL e desenvolvedor poliglota. Trabalho com web desde 2008 e atualmente estou no Jusbrasil.</subtitle><author><name>Raffael Tancman</name></author><entry><title type="html">Kubernetes para iniciantes - Parte 2</title><link href="https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes-parte-2.html" rel="alternate" type="text/html" title="Kubernetes para iniciantes - Parte 2" /><published>2020-07-25T11:51:00+00:00</published><updated>2020-07-25T11:51:00+00:00</updated><id>https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes-parte-2</id><content type="html" xml:base="https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes-parte-2.html">&lt;p&gt;Este artigo é a continuação do nosso wordpress rodando no k8s. Caso você não tenha acessado a primeira parte, &lt;a href=&quot;https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes.html&quot;&gt;clique aqui&lt;/a&gt; para entender o que é k8s, quais são seus principais comandos e como subir um wordpress.&lt;/p&gt;

&lt;p&gt;Neste artigo vamos evoluir o nosso projeto do wordpress aplicando Secrets, Configmap e Volumes. Vamos iniciar alterando o nosso Deployment para utilizar o Configmap e Secrets.&lt;/p&gt;

&lt;h3 id=&quot;configmap-e-secrets-na-prática&quot;&gt;Configmap e Secrets na prática&lt;/h3&gt;

&lt;p&gt;No nosso manifesto atual estamos incluindo as variáveis de ambiente todas no manifesto. Isso não é errado, mas quando se trata de configurações que podem ser compartilhadas entre outros pods o ideal é a gente centralizar essas informações em um manifesto em si. O Configmap vai nos ajudar nesse sentido. Vamos criar o nosso e aplicar essa alteração no Deployment.&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-configmap.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ConfigMap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;mariadb-service&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_PORT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3306&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;wp-k8s&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora podemos rodar o apply e verificar se tudo esta funcionando.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-configmap.yaml
kubectl get configmap

&lt;span class=&quot;c&quot;&gt;# resultado&lt;/span&gt;
NAME DATA AGE
meu-blog-escalavel-configmap 2 11m

&lt;span class=&quot;c&quot;&gt;# rodando o describe&lt;/span&gt;
kubectl describe configmap meu-blog-escalavel-configmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vamos aplicar essas variáveis no nosso deployment e para isso existem diversas formas de aplicar essa configuração e recomendo a leitura da &lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#use-configmap-defined-environment-variables-in-pod-commands&quot;&gt;documentação aqui&lt;/a&gt;. Altere o arquivo wp-deployment.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:5.4.2-php7.2-apache&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-user&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;q1w2e3r4&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PORT&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PORT&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Iremos agora alterar o Deployment do nosso banco mariaDB. Altere o arquivo wp-mariadb.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Recreate&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rtancman/mariadb-local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Always&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;adminroot&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-user&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;q1w2e3r4&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora basta aplicar as alterações. Vamos lá!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-deployment.yaml
kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-mariadb.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto! Agora toda vez que alterar o valor do ConfigMap essas variáveis vão ser aplicadas nos nossos deployments. Ainda precisamos acertar as credenciais de acesso e para isso vamos utilizar o &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/secret/&quot;&gt;Secret&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Antes de criar o arquivo vamos precisar colocar os valores de login e senha do banco em base64 encode.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;adminroot&quot;&lt;/span&gt; | base64
&lt;span class=&quot;c&quot;&gt;#resultado&lt;/span&gt;
YWRtaW5yb290

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;wp-user&quot;&lt;/span&gt; | base64
&lt;span class=&quot;c&quot;&gt;#resultado&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;d3AtdXNlcg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;q1w2e3r4&quot;&lt;/span&gt; | base64
&lt;span class=&quot;c&quot;&gt;#resultado&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;cTF3MmUzcjQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora é criar o nosso manifesto e para isso vamos criar o arquivo wp-secrets.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Secret&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Opaque&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mariadb_username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;d3AtdXNlcg==&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mariadb_password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cTF3MmUzcjQ=&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mariadb_root_password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;YWRtaW5yb290&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vamos aplicar e verificar as configurações.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-secrets.yaml
kubectl get secrets meu-blog-escalavel-secrets
&lt;span class=&quot;c&quot;&gt;#resultado&lt;/span&gt;
NAME TYPE DATA AGE
meu-blog-escalavel-secrets Opaque 3 9s

kubectl describe secrets meu-blog-escalavel-secrets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após subir essa configuração, vamos aplicar os secrets em nossos deployments. Altere o arquivo wp-deployment.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:5.4.2-php7.2-apache&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_username&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PORT&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PORT&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;E precisamos alterar o arquivo wp-mariadb.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Recreate&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rtancman/mariadb-local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Always&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_username&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_root_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com os manifestos alterados vamos aplicar essa nova configuração.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-deployment.yaml
kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-mariadb.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto! Nossos deployments agora estão configurados utilizando ConfigMap e Secrets. Com isso aplicamos boas práticas em nosso manifesto. Agora vamos aplicar o PersistentVolume e fazer com que a nossa base do mariaDB não seja destruida a cada restart dos pods.&lt;/p&gt;

&lt;h2 id=&quot;persistent-volume&quot;&gt;Persistent Volume&lt;/h2&gt;

&lt;p&gt;Diferentemente dos outros deployments, como este é um banco de dados e não queremos perder as suas informações a cada restart do pod, vamos criar um volume. E para isso vamos alterar o nosso manifesto para incluir a configuração de volumes. Aqui utilizamos o tipo &lt;a href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistent-volumes&quot;&gt;PersistentVolume&lt;/a&gt; e &lt;a href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims&quot;&gt;PersistentVolumeClaim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-mariadb-pv.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PersistentVolume&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-pv-volume&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;capacity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;20Gi&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;accessModes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ReadWriteOnce&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hostPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/mnt/data&quot;&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PersistentVolumeClaim&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-pv-claim&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;accessModes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ReadWriteOnce&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;20Gi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Neste aquivo acima estamos criando 2 objetos no k8s que são PersistentVolume e o PersistentVolumeClaim. O k8s permite essa formatação incluindo o delimitador — defindo onde termina o manifesto. Agora vamos aplicar o nosso volume no Deployment do mariadb.&lt;/p&gt;

&lt;p&gt;Alterar o arquivo wp-mariadb.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Recreate&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rtancman/mariadb-local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Always&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_username&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_root_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-persistent-storage&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/mysql&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-persistent-storage&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;persistentVolumeClaim&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;claimName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-pv-claim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com isso, vamos executar os comandos de apply.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-mariadb-pv.yaml
kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-mariadb.yaml

&lt;span class=&quot;c&quot;&gt;# verificando os nossos volumes&lt;/span&gt;
kubectl get pvc mariadb-pv-claim
kubectl get pv mariadb-pv-volume
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto! Com isso agora podemos restart o nosso deployment sem problemas que a nossa base de dados não vai ser mais removida devido ao volume que criamos. Ainda sim podemos melhor esse manifesto do mariadb. Nesses casos que precisamos de um volume para manter a consistência dos nossos deployments o ideal é utilizar o objeto &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/&quot;&gt;StatefulSets&lt;/a&gt;. Vamos as alterações em nosso manifesto.&lt;/p&gt;

&lt;p&gt;Vamos criar um novo arquivo wp-mariadb-statefullsets.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;StatefulSet&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;serviceName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rtancman/mariadb-local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Always&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_username&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb_root_password&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;valueFrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;configMapKeyRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-configmap&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-persistent-storage&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/mysql&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;volumeClaimTemplates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-persistent-storage&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;accessModes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ReadWriteOnce&quot;&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;20Gi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com essa configuração volumeClaimTemplates toda vez que você subir um novo statefullset ou der um scale nesse objeto, o k8s vai criar um novo volume seguindo a especificação do manifesto. Agora vamos executar os comandos.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# vamos apagar as configurações passadas&lt;/span&gt;
kubectl delete deployments mariadb-wp
kubectl delete pvc mariadb-pv-claim
kubectl delete pv mariadb-pv-volume

kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-mariadb-statefullsets.yaml
&lt;span class=&quot;c&quot;&gt;# verificando os nossos volumes&lt;/span&gt;
kubectl get pvc mariadb-pv-claim
kubectl get pv mariadb-pv-volume
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto agora temos o nosso mariadb como statefullset! Mais uma vez parabéns se você chegou até aqui e podemos dizer que o básico sobre Secrets, ConfigMap e Volumes no k8s você acabou de aprender. Leia a documentação e faça os tutoriais no site do k8s para continuar praticando. Todo este código esta no github no repositorio &lt;a href=&quot;https://github.com/rtancman/k8s-examples&quot;&gt;rtancman/k8s-examples&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Este artigo é a continuação do nosso wordpress rodando no k8s. Caso você não tenha acessado a primeira parte, clique aqui para entender o que é k8s, quais são seus principais comandos e como subir um wordpress.</summary></entry><entry><title type="html">Elasticsearch como ferramenta de busca</title><link href="https://www.rtancman.com.br/information-retrieval/elasticsearch-como-ferramenta-de-busca.html" rel="alternate" type="text/html" title="Elasticsearch como ferramenta de busca" /><published>2020-06-30T11:51:00+00:00</published><updated>2020-06-30T11:51:00+00:00</updated><id>https://www.rtancman.com.br/information-retrieval/elasticsearch-como-ferramenta-de-busca</id><content type="html" xml:base="https://www.rtancman.com.br/information-retrieval/elasticsearch-como-ferramenta-de-busca.html">&lt;p&gt;Boa parte dos sistemas tem uma ferramenta de busca e a forma como a mesma é implementada pode variar. Faz sentido utilizar o banco de dados atual da aplicação e começar a aplicar algumas features de busca, mas isso pode ser um tiro no pé quando você quer de fato entregar o melhor documento dada uma determinada busca. Nesses casos, o elasticsearch é a ferramenta que vai trazer documentos relevantes para um resultado de busca. Vamos entender nesse artigo o que é essa ferramenta e executar os principais comandos do dia a dia. No final iremos subir um cluster no docker e ver a parte de monitoramento utilizando o kibana.&lt;/p&gt;

&lt;h3 id=&quot;o-que-é-o-elasticsearch&quot;&gt;O que é o elasticsearch?&lt;/h3&gt;

&lt;p&gt;É um sistema de busca distribuído baseado no Apache Lucene. A sua API Rest é simples e robusta. Além disso, é uma ferramenta completa, veloz e de escalabilidade distribuída. Foi lançado pela primeira vez em 2010 pela Elasticsearch e é uma ferramenta de alta confiabilidade e robustez. Muitas empresas utilizam essa ferramenta e já vi por lugares que passei diversas soluções sendo criadas com ele.&lt;/p&gt;

&lt;p&gt;Um dos motivos da sua velocidade é o &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverted_index&quot;&gt;índice invertido&lt;/a&gt;. Que é projetado para permitir buscas de texto completo muito rápidas. Um índice invertido lista cada palavra exclusiva que apareça em qualquer documento e identifica todos os documentos em que cada palavra aparece. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&quot;&gt;Nesta sessão da documentação&lt;/a&gt; do elasticsearch temos mais detalhes de porque ele é rápido e como essa distribuição acontece.&lt;/p&gt;

&lt;p&gt;Agora focando na relevância dos documentos retornados no resultado, elasticsearch utiliza algoritmos de similaridade para criar um score único e com esse valor ele ordena os resultados dos mais relevantes para os menos relevantes baseado em uma query feita pelo usuário. Por default a partir da versão 7, utiliza o &lt;a href=&quot;https://en.wikipedia.org/wiki/Okapi_BM25&quot;&gt;BM25&lt;/a&gt; que é uma função de ranking para calcular quão importante cada documento. Além do BM25 existem outros algoritmos e você pode ver nessa sessão da documentação &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-similarity.html&quot;&gt;“Similarity module”&lt;/a&gt; mas o atual da conta recado é um dos melhores algoritmos de ranking.&lt;/p&gt;

&lt;p&gt;Recomendo a leitura da documentação da ferramenta para maior entendimento de como as coisa funcionam por debaixo dos panos e principalmente para entender como funciona a análise de textos que você pode acessar aqui nessa sessão de &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html#analysis&quot;&gt;“Text analysis”&lt;/a&gt; . Vamos entender na prática como podemos interagir com essa ferramenta e quão simples e subir um cluster.&lt;/p&gt;

&lt;h3 id=&quot;rodando-o-elasticsearch-localmente&quot;&gt;Rodando o elasticsearch localmente&lt;/h3&gt;

&lt;p&gt;O elasticsearch como é uma solução construída em Java, você basicamente precisa baixar o mesmo e rodar localmente. Eu recomendo sempre utilizar os gerenciadores de pacotes do seu SO para realizar essa instalação. Mas para esse artigo vamos utilizar o docker e docker-compose para facilitar todo o setup. Então vamos entender o que vamos instalar que serão as seguintes ferramentas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Elasticsearch: Que é o sistema de busca.&lt;/li&gt;
  &lt;li&gt;Kibana: É o cliente para gerenciar o elasticsearch além de ter ferramentas de monitoramento e um cliente rico para rodar queries no elastic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos a configuração do arquivo docker-compose.yml:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.2'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.elastic.co/elasticsearch/elasticsearch:7.8.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;es&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node.name=es&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.name=es-docker-cluster&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;discovery.seed_hosts=es&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.initial_master_nodes=es&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bootstrap.memory_lock=true&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ES_JAVA_OPTS=-Xms512m&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-Xmx512m&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ulimits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;memlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;soft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hard&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;es_data:/usr/share/elasticsearch/data&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9200:9200&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elastic&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;kibana&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.elastic.co/kibana/kibana:7.8.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kibana&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5601:5601&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ELASTICSEARCH_URL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://es:9200&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ELASTICSEARCH_HOSTS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://es:9200&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elastic&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es_data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;elastic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bridge&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Essa configuração foi feita com base na documentação do elasticsearch &lt;a href=&quot;https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-docker.html&quot;&gt;“Running the Elastic Stack on Docker”&lt;/a&gt; e simplifiquei por hora para a gente entender como as coisas funcionam. Agora podemos executar o comando docker-compose up.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora com a aplicação rodando podemos acessar o kibana pela url &lt;a href=&quot;http://localhost:5601/&quot;&gt;http://localhost:5601/&lt;/a&gt;. Pode ser que demore um pouquinho para subir e você pode conferir se tudo está funcionando verificando se os containers estão de pé. Para isso basta executar:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# containers que estão rodando&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
011da05e9bd2 docker.elastic.co/elasticsearch/elasticsearch:7.8.0 &lt;span class=&quot;s2&quot;&gt;&quot;/tini -- /usr/local...&quot;&lt;/span&gt; 4 hours ago Up 4 hours 0.0.0.0:9200-&amp;gt;9200/tcp, 9300/tcp es01
961846fb5ae6 docker.elastic.co/kibana/kibana:7.8.0 &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/bin/dumb...&quot;&lt;/span&gt; 4 hours ago Up 4 hours 0.0.0.0:5601-&amp;gt;5601/tcp kib01

&lt;span class=&quot;c&quot;&gt;# para ver os logs&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker logs es01
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker logs kib01

&lt;span class=&quot;c&quot;&gt;# checando o servico elasticsearch&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cat/indices?v&amp;amp;pretty&quot;&lt;/span&gt;
health status index uuid pri rep docs.count docs.deleted store.size pri.store.size
green open .kibana-event-log-7.8.0-000001 7fJFAISuQRaEqZcWLBH7oA 1 0 3 0 15.5kb 15.5kb
green open .apm-custom-link BijrW0OUQOOw7RSGJcz9HA 1 0 0 0 208b 208b
green open .kibana_task_manager_1 FvG7WnppQ6WioFlyQTF17Q 1 0 5 0 14.1kb 14.1kb
green open .apm-agent-configuration Qh9Ye6CgSMu_aIrulqZFsQ 1 0 0 0 208b 208b
green open .kibana_1 kd3OSBtlSGyjKCIze8VVvQ 1 0 26 6 63kb 63kb

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET &lt;span class=&quot;s2&quot;&gt;&quot;localhost:9200/_cat/nodes?v&amp;amp;pretty&quot;&lt;/span&gt;
ip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name
172.21.0.3 20 96 5 0.85 1.52 1.08 dilmrt &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'es01'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora que verificamos que esta tudo está rodando normalmente vamos explorar o elasticsearch pelo kibana.&lt;/p&gt;

&lt;h3 id=&quot;executando-comandos-do-elasticsearch&quot;&gt;Executando comandos do elasticsearch&lt;/h3&gt;

&lt;p&gt;Vamos explorar o elasticsearch realizando operações. Com o kibana aberto vamos acessar o Console web dele para rodar as operações.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/jA83LpR-gmo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Caso você não tenha encontrado o console basta acessar a url &lt;a href=&quot;http://0.0.0.0:5601/app/kibana#/dev_tools/console&quot;&gt;http://0.0.0.0:5601/app/kibana#/dev_tools/console&lt;/a&gt; ou então rodar os comandos diretamente pelo seu terminal utilizando o curl. Nestes exemplos vou disponibilizar as 2 formas. Vamos acessar a API do elasticsearch:&lt;/p&gt;

&lt;h4 id=&quot;api-cat----cat-indices-api&quot;&gt;API Cat -  &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-indices.html#cat-indices&quot;&gt;cat indices API&lt;/a&gt;&lt;/h4&gt;

&lt;h4 id=&quot;lista-os-indices-que-temos-dispóniveis&quot;&gt;Lista os indices que temos dispóniveis&lt;/h4&gt;
&lt;p&gt;Podemos acessar os outros recursos na sessão da documentação &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html&quot;&gt;cat APIs&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;

GET /_cat/indices

&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/_cat/indices&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Provavelmente você deve ter tido o seguinte resultado:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;green open .kibana-event-log-7.8.0-000001 7fJFAISuQRaEqZcWLBH7oA 1 0 4 0 20.6kb 20.6kb
green open .apm-custom-link BijrW0OUQOOw7RSGJcz9HA 1 0 0 0 208b 208b
green open .kibana_task_manager_1 FvG7WnppQ6WioFlyQTF17Q 1 0 5 0 14.1kb 14.1kb
green open .apm-agent-configuration Qh9Ye6CgSMu_aIrulqZFsQ 1 0 0 0 208b 208b
green open .kibana_1 kd3OSBtlSGyjKCIze8VVvQ 1 0 38 4 77.2kb 77.2kb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Estes são os índices que o kibana cria. Agora vamos criar um índice e trabalhar em cima dele.&lt;/p&gt;

&lt;h3 id=&quot;trabalhando-com-indices&quot;&gt;Trabalhando com indices&lt;/h3&gt;

&lt;h4 id=&quot;criando-um-índice-create-index-api&quot;&gt;Criando um índice &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html&quot;&gt;“Create index API”&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Vamos dar uma olhada em como podemos criar index.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
PUT /meu_primeiro_index

&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPUT&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/meu_primeiro_index&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dessa forma criamos um índice sem nenhum atributo. Os índices são responsáveis por armazenar os nosso documentos e nele podemos usar diversos tipos que você pode ver os suportados nessa sessão da documentação &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html&quot;&gt;“Field datatypes”&lt;/a&gt;. Agora vamos criar um índice com alguns campos.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
PUT /filmes
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;mappings&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;float&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPUT&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{  &quot;mappings&quot;: {    &quot;properties&quot;: {      &quot;nome&quot;: {        &quot;type&quot;: &quot;text&quot;      },      &quot;descricao&quot;: {        &quot;type&quot;: &quot;text&quot;      },      &quot;nota&quot;: {        &quot;type&quot;: &quot;float&quot;      },      &quot;classificao&quot;: {        &quot;type&quot;: &quot;text&quot;      },      &quot;data_lancamento&quot;: {        &quot;type&quot;: &quot;date&quot;      }    }  }}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após a sua criação podemos visualizar a sua estrutura da seguinte forma:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
GET /filmes/_mapping
GET /filmes/_settings


&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_mapping&quot;&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_settings&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html&quot;&gt;Mapping&lt;/a&gt; : Descreve as propriedades de um documento que vai ser inserido em um índice.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules&quot;&gt;Settings&lt;/a&gt;: Descreve as configurações de um índice. Aqui são configurados um recurso muito interessante que são os &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html&quot;&gt;analyzers, tokenizers, token filters and character filters.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;manipulando-documentos-document-apis&quot;&gt;Manipulando documentos &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html&quot;&gt;“Document APIs”&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Nesta parte vamos entender como inserir, editar, ler e remover documentos dos indices. Vamos lá!&lt;/p&gt;

&lt;h4 id=&quot;criando-documentos-index-api&quot;&gt;Criando documentos &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html&quot;&gt;“Index API”&lt;/a&gt;:&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
POST /filmes/_doc/
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Matrix&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Melhor filme ever!&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;livre&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;: 10,
  &lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1999-05-21T14:12:12&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_doc/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{  &quot;nome&quot;: &quot;Matrix&quot;,  &quot;descricao&quot;: &quot;Melhor filme ever!&quot;,  &quot;classificao&quot;: &quot;livre&quot;,  &quot;nota&quot;: 10,  &quot;data_lancamento&quot;: &quot;1999-05-21T14:12:12&quot;}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;editando-documentos-update-api&quot;&gt;Editando documentos &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html&quot;&gt;“Update API”&lt;/a&gt;:&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
POST filmes/_update/-DEY_XIBblRt4Ct0995B
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;doc&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Não recomendado para menores de doze anos&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_update/-DEY_XIBblRt4Ct0995B&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{  &quot;doc&quot;: {    &quot;classificao&quot;: &quot;Não recomendado para menores de doze anos&quot;  }}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lendo-documentos-get-api&quot;&gt;Lendo documentos &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-get.html&quot;&gt;“Get API”&lt;/a&gt;:&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
GET filmes/_doc/-DEY_XIBblRt4Ct0995B

&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_doc/-DEY_XIBblRt4Ct0995B&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;removendo-documentos-delete-api&quot;&gt;Removendo documentos &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete.html&quot;&gt;“Delete API”&lt;/a&gt;:&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
DELETE filmes/_doc/-DEY_XIBblRt4Ct0995B

&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XDELETE&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_doc/-DEY_XIBblRt4Ct0995B&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;realizando-buscas&quot;&gt;Realizando buscas&lt;/h3&gt;

&lt;p&gt;Vamos entender como fazer queries no elasticsearch. Para isso vamos continuar explorando o nosso índice recém criado de filmes. Vamos popular o mesmo com alguns filmes utilizando o &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html&quot;&gt;“Bulk API”&lt;/a&gt; para inserir vários documentos na mesma requisição.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /filmes/_bulk
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{}}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Matrix&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Melhor filme ever!&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Não recomendado para menores de doze anos&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;:10,&lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;1999-05-21T14:12:12&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{}}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Matrix Reloaded&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Melhor filme ever!!!!&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Não recomendado para menores de doze anos&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;:8.5,&lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2003-05-15T11:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{}}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Matrix Revolutions&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Melhor filme ever!!!!&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Não recomendado para menores de doze anos&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;:8.9,&lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2003-11-05T11:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{}}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Matrix 4&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;descricao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Melhor filme ever!!!!&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;classificao&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Não recomendado para menores de doze anos&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;data_lancamento&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2022-04-01T11:30:00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_bulk&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{&quot;index&quot;:{}}{&quot;nome&quot;:&quot;Matrix&quot;,&quot;descricao&quot;:&quot;Melhor filme ever!&quot;,&quot;classificao&quot;:&quot;Não recomendado para menores de doze anos&quot;,&quot;nota&quot;:10,&quot;data_lancamento&quot;:&quot;1999-05-21T14:12:12&quot;}{&quot;index&quot;:{}}{&quot;nome&quot;:&quot;Matrix Reloaded&quot;,&quot;descricao&quot;:&quot;Melhor filme ever!!!!&quot;,&quot;classificao&quot;:&quot;Não recomendado para menores de doze anos&quot;,&quot;nota&quot;:8.5,&quot;data_lancamento&quot;:&quot;2003-05-15T11:30:00&quot;}{&quot;index&quot;:{}}{&quot;nome&quot;:&quot;Matrix Revolutions&quot;,&quot;descricao&quot;:&quot;Melhor filme ever!!!!&quot;,&quot;classificao&quot;:&quot;Não recomendado para menores de doze anos&quot;,&quot;nota&quot;:8.9,&quot;data_lancamento&quot;:&quot;2003-11-05T11:30:00&quot;}{&quot;index&quot;:{}}{&quot;nome&quot;:&quot;Matrix 4&quot;,&quot;descricao&quot;:&quot;Melhor filme ever!!!!&quot;,&quot;classificao&quot;:&quot;Não recomendado para menores de doze anos&quot;,&quot;nota&quot;:0,&quot;data_lancamento&quot;:&quot;2022-04-01T11:30:00&quot;}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com o nosso índice populado vamos realizar algumas queries utilizando a &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html&quot;&gt;“Search API”&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# chamada no kibana&lt;/span&gt;
GET /filmes/_search

GET filmes/_search
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Matrix&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

GET filmes/_search
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;match&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;nome&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Matrix&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


GET /filmes/_search
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;range&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;nota&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;gte&quot;&lt;/span&gt;: 2,
        &lt;span class=&quot;s2&quot;&gt;&quot;lte&quot;&lt;/span&gt;: 9
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# curl para rodar no terminal&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_search&quot;&lt;/span&gt;

curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_search&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{  &quot;query&quot;: {    &quot;match&quot;: {      &quot;nome&quot;: &quot;Matrix&quot;    }  }}'&lt;/span&gt;

curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9200/filmes/_search&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{  &quot;query&quot;: {    &quot;range&quot;: {      &quot;nota&quot;: {        &quot;gte&quot;: 2,        &quot;lte&quot;: 9      }    }  }}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Acima utilizamos queries com o &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html&quot;&gt;match&lt;/a&gt; e &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html&quot;&gt;range&lt;/a&gt;. São queries simples mas analisando a documentação você pode incrementar esses filtros conforme a sua necessidade.&lt;/p&gt;

&lt;p&gt;Se você chegou até aqui PARABÉNS!!! Você agora já sabe criar documentos e pesquisar os mesmos. Vamos seguir nosso artigo transformando agora nosso elasticsearch em cluster com mais nodes.&lt;/p&gt;

&lt;h3 id=&quot;criando-um-cluster-elasticsearch&quot;&gt;Criando um cluster elasticsearch&lt;/h3&gt;

&lt;p&gt;Vamos seguir utilizando o docker mas a configuração continua sendo a mesma e você basicamente precisa incluir essas propriedades no arquivo de configuração do elasticsearch que geralmente fica no /usr/share/elasticsearch/config/elasticsearch.yml ou você pode criar variáveis de ambientes seguindo o nome das chaves utilizadas. São elas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.name.html&quot;&gt;cluster.name&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/discovery-settings.html#unicast.hosts&quot;&gt;discovery.seed_hosts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/discovery-settings.html#initial_master_nodes&quot;&gt;cluster.initial_master_nodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com isso agora vamos alterar o nosso docker-compose.yml para os seguintes valores:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.2'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;es01&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.elastic.co/elasticsearch/elasticsearch:7.8.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;es01&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node.name=es01&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.name=es-docker-cluster&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;discovery.seed_hosts=es02&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.initial_master_nodes=es01&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bootstrap.memory_lock=true&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ES_JAVA_OPTS=-Xms256m&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-Xmx256m&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ulimits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;memlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;soft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hard&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data01:/usr/share/elasticsearch/data&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9200:9200&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elastic&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;es02&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.elastic.co/elasticsearch/elasticsearch:7.8.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;es02&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node.name=es02&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.name=es-docker-cluster&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;discovery.seed_hosts=es01&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster.initial_master_nodes=es01&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bootstrap.memory_lock=true&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ES_JAVA_OPTS=-Xms256m&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-Xmx256m&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ulimits&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;memlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;soft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hard&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;data02:/usr/share/elasticsearch/data&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9201:9200&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elastic&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;kib01&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker.elastic.co/kibana/kibana:7.8.0&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kib01&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5601:5601&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;XPACK_APM_SERVICEMAPENABLED&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;false'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ELASTICSEARCH_URL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://es01:9200&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ELASTICSEARCH_HOSTS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://es01:9200&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;elastic&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data01&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data02&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;elastic&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bridge&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Em seguida vamos rodar o comando do docker-compose para recriar os containers:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora precisamos aguardar os containers subirem com sucesso. Em alguns casos caso você tenha uma máquina com poucos recursos recomendo alterar a configuração no docker-compose.yml &lt;code class=&quot;highlighter-rouge&quot;&gt;ES_JAVA_OPTS=-Xms256m -Xmx256m&lt;/code&gt; devido a problemas de recursos em sua máquina local mesmo.&lt;/p&gt;

&lt;p&gt;Caso os containers estejam rodando normalmente, agora vou te mostrar abaixo a parte de monitoramento do kibana para agente acessar o nosso cluster e verificar se tudo está rodando corretamente. Vamos lá!&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3ljxqJ3pEcw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;resumindo&quot;&gt;Resumindo&lt;/h3&gt;

&lt;p&gt;Neste post vimos o que é o elasticsearch e como ele funciona. Subimos um elastic local utilizando docker e docker-compose e nos conectamos ao kibana para executar as queries. Além disso também vimos como configurar um cluster localmente para testes e visualizamos no kibana a área de monitoramento em geral.&lt;/p&gt;

&lt;p&gt;Nos próximos posts vamos construir um serviço de busca utilizando a linguagem de programação Go. Também iremos evoluir o nosso índice “filmes” aplicando boas práticas para um sistema de busca com o elasticsearch.&lt;/p&gt;

&lt;p&gt;Grande Abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Boa parte dos sistemas tem uma ferramenta de busca e a forma como a mesma é implementada pode variar. Faz sentido utilizar o banco de dados atual da aplicação e começar a aplicar algumas features de busca, mas isso pode ser um tiro no pé quando você quer de fato entregar o melhor documento dada uma determinada busca. Nesses casos, o elasticsearch é a ferramenta que vai trazer documentos relevantes para um resultado de busca. Vamos entender nesse artigo o que é essa ferramenta e executar os principais comandos do dia a dia. No final iremos subir um cluster no docker e ver a parte de monitoramento utilizando o kibana.</summary></entry><entry><title type="html">De Software Engineer para Search Ranking Engineer</title><link href="https://www.rtancman.com.br/information-retrieval/de-software-engineer-para-search-ranking-engineer.html" rel="alternate" type="text/html" title="De Software Engineer para Search Ranking Engineer" /><published>2020-06-29T20:55:00+00:00</published><updated>2020-06-29T20:55:00+00:00</updated><id>https://www.rtancman.com.br/information-retrieval/de-software-engineer-para-search-ranking-engineer</id><content type="html" xml:base="https://www.rtancman.com.br/information-retrieval/de-software-engineer-para-search-ranking-engineer.html">&lt;p&gt;Sempre trabalhei como desenvolvedor fullstack e me lembro como se fosse hoje quando recebi a minha primeira oportunidade na “A Resistência”. Neste momento eu iniciava a minha jornada como profissional de tecnologia. Na maior parte das empresas em que trabalhei tive a oportunidade de trabalhar em diversas áreas sendo backend, frontend, dba e operações. Com isso, acabei adquirindo uma experiência em diversas áreas. Porém, nos últimos 4 anos passei a trabalhar como software engineer. A convite na minha atual empresa, troquei de time integrando o de busca.&lt;/p&gt;

&lt;p&gt;Até então não tinha ideia de como tudo seria. Sobre busca, já havia trabalhado com uma das principais tecnologias utilizadas nas empresas que é o elasticsearch. Porém dessa vez foi bem diferente! Por onde passei, vi diversas implementações de elasticsearch. A maioria delas, utilizando o software no seu modo básico, que já é muito bom, seguindo o formato de software de prateleira e principalmente sem ter especialistas na área trabalhando junto com o time de desenvolvimento. Dessa vez seria diferente e foi aí que a mágica aconteceu!&lt;/p&gt;

&lt;p&gt;Atualmente eu trabalho na Jusbrasil e por ela tive a imensa sorte de conhecer pessoas incríveis de Manaus, especificamente pesquisadores e estudantes da UFAM. Entrando nesse mundo descobri que busca vai muito além de uma simples implementação do elasticsearch existe toda uma ciência por trás que é chamada de RI ou Recuperação da Informação.&lt;/p&gt;

&lt;p&gt;Falando sobre busca em si eu primeiramente imaginava ser um grande banco de dados onde rodamos um select paginado. Porém isso está longe de ser um sistema de busca e é aí que RI começa a fazer sentido. Imaginem vocês retornar milhares de resultados sem relevância para a busca que usuário está fazendo, qual seria a percepção do mesmo pelo sistema? Não é atoa que gostamos do google, porque geralmente ele traz bons resultados para os termos que buscamos e RI é a ciência por trás disso. Recomendo MUITO o &lt;a href=&quot;https://www.youtube.com/watch?v=skDZcsOWq7U&amp;amp;list=PLgMem-KiO8qHUcI8D7gyhqH2gv0TPzhzR&quot;&gt;curso de RI na UFAM do prof. Dr. Edleno Silva de Moura&lt;/a&gt; para entenderem do assunto..&lt;/p&gt;

&lt;h3 id=&quot;entendendo-o-que-um-sistema-de-ri-deve-fazer&quot;&gt;Entendendo o que um sistema de RI deve fazer…&lt;/h3&gt;

&lt;p&gt;Confesso a vocês que quando entrei no time me senti um extraterrestre! Eram tantos termos e algoritmos específicos que levou um tempinho para digerir todo esse novo conhecimento. Para isso contei com a ajuda dos meus amigos de time e principalmente pelo curso que comentei acima.&lt;/p&gt;

&lt;p&gt;Primeiramente procurei entender do básico e o principal fato que surgiu foi Precisão X Revocação. Ou seja quando buscamos algo queremos que o documento mais relevante esteja nas primeiras posições. Isso é precisão e quanto maior os cliques nas primeiras posições temos uma boa métrica para dizer o quão preciso o nosso sistema de busca é. Entretanto, nem sempre o melhor resultado está na primeira posição e gostaríamos que os outros resultados em sequência fossem tão bons ou melhores que os primeiros. Logo quando trazemos mais documentos relevantes nos resultados de busca, estamos melhorando a revocação do nosso sistema.&lt;/p&gt;

&lt;p&gt;Quando aprendi esse conceito imaginei nossa simples é trazer os documentos relevantes nas primeiras posições sempre. Mas como medimos se isso está acontecendo e que unidade de medida deveríamos utilizar?&lt;/p&gt;

&lt;h3 id=&quot;métricas-de-qualidade&quot;&gt;Métricas de qualidade&lt;/h3&gt;

&lt;p&gt;Falamos de Precisão X Revocação e para os resultados em geral podemos utilizar algumas métricas tais como MRR e NDCG.&lt;/p&gt;

&lt;p&gt;MRR ou &lt;a href=&quot;https://en.wikipedia.org/wiki/Mean_reciprocal_rank&quot;&gt;Mean reciprocal rank&lt;/a&gt;, é uma fórmula estatística para dizer o quão preciso o seu sistema de busca é. Mas como eu calculo essa informação? Precisamos registrar da lista de resultado qual é o resultado clicado e a sua posição se foi o primeiro ou último por exemplo. Tendo essa informação registrada rodamos uma fórmula para saber quão preciso o nosso sistema está.&lt;/p&gt;

&lt;p&gt;NDCG ou &lt;a href=&quot;https://en.wikipedia.org/wiki/Discounted_cumulative_gain#Normalized_DCG&quot;&gt;Normalized Discounted cumulative gain&lt;/a&gt; é uma métrica de normalização que é uma métrica que vai apontar a qualidade geral do seu sistema de busca. Ela leva em consideração precisão e revocação mas além disso, ela introduz a nota de documento e faz um desconto progressivo com base na sua posição.&lt;/p&gt;

&lt;p&gt;Além dessas existem outras métricas e para ter um entendimento melhor recomendo a leitura do livro &lt;a href=&quot;https://books.google.com.br/books?id=YWk3AgAAQBAJ&amp;amp;printsec=frontcover&amp;amp;hl=pt-BR&amp;amp;source=gbs_ge_summary_r&amp;amp;cad=0#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;“Recuperação de Informação: Conceitos e Tecnologia das Máquinas de Busca”&lt;/a&gt; dos autores Berthier Ribeiro Neto e Ricardo Baeza Yates. Estou lendo este livro que é uma referência na literatura para um entendimento geral de RI e foi recomendado pelo meu time.&lt;/p&gt;

&lt;h3 id=&quot;como-geramos-as-métricas&quot;&gt;Como geramos as métricas?&lt;/h3&gt;

&lt;p&gt;Para isso precisamos coletar os eventos em nosso sistema de busca. Vocês devem conhecer o Google Analytics e caso você utilize essa ferramenta, pode ser uma boa usar os eventos para registrar essas informações. Muito cuidado com o Analytics porque no modo free ele exibe somente uma amostragem dos dados e isso não pode ser uma boa escolha. Agora caso você tenha acesso a todas as informações com o 360 é uma ferramenta que pode te ajudar e muito até porque com o 360 você consegue exportar todos os dados para uma tabela no bigtable por exemplo. Caso contrário a sugestão é ter de alguma forma todos as informações de busca registradas. Os eventos que precisamos registrar inicialmente são o usuário clicou no resultado da posição X e qual termo ele procurou somado com os resultados que você exibiu. Como vimos acima nas métricas, precisamos dessas informações mapeadas para criar-las e ir acompanhando as mesmas.&lt;/p&gt;

&lt;h3 id=&quot;search-ranking-engineer&quot;&gt;Search Ranking Engineer&lt;/h3&gt;

&lt;p&gt;Agora que vocês entenderam o que deve ser um sistema de busca e como podemos medir a sua qualidade vamos ver qual é o papel de um Ranking Engineer. Na minha concepção é um engenheiro focado em melhorar o ranking de busca utilizando algoritmos, teorias e MUITOS testes para trazer o maior número de documentos relevantes nas primeiras posições do seu sistema.&lt;/p&gt;

&lt;p&gt;Essa profissão é de muito estudo, pesquisa e testes principalmente. Porque eu diria que não existe uma fórmula única e tudo depende muito do domínio da sua empresa. Além disso, cada usuário realiza a busca de uma forma peculiar em um sistema de busca e por este motivo precisamos da sua utilização e de um acompanhamento das métricas para saber se de fato alteração na forma como exibimos os resultados vem melhorando ou piorando em média.&lt;/p&gt;

&lt;h3 id=&quot;resumo&quot;&gt;Resumo&lt;/h3&gt;

&lt;p&gt;Esta é uma área mais científica e necessita de muita pesquisa e estudos. As tecnologias em geral são praticamente as mesmas que utilizamos como desenvolvedores em si porém os algoritmos são mais complexos e você aqui vai ver que suas aulas na faculdade de estrutura de dados vão valer cada segundo em sua vida nessa profissão.&lt;/p&gt;

&lt;p&gt;Nos próximos posts vou falar sobre o elasticsearch. Vamos ver porquê e como devemos usar o mesmo para construir um sistema de busca. Falo dessa ferramenta por ser uma solução de mercado que vai ser o primeiro passo para muitas empresas melhorarem o seu sistema de busca.&lt;/p&gt;

&lt;p&gt;Este post é uma introdução no assunto de RI e provavelmente na medida do possível irei continuar postando outros conteúdos relacionados sobre o que estou estudando no momento.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/information-retrieval/elasticsearch-como-ferramenta-de-busca.html&quot;&gt;VEJA O POST: Elasticsearch como ferramenta de busca
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Sempre trabalhei como desenvolvedor fullstack e me lembro como se fosse hoje quando recebi a minha primeira oportunidade na “A Resistência”. Neste momento eu iniciava a minha jornada como profissional de tecnologia. Na maior parte das empresas em que trabalhei tive a oportunidade de trabalhar em diversas áreas sendo backend, frontend, dba e operações. Com isso, acabei adquirindo uma experiência em diversas áreas. Porém, nos últimos 4 anos passei a trabalhar como software engineer. A convite na minha atual empresa, troquei de time integrando o de busca.</summary></entry><entry><title type="html">Quero programar, por onde começar?</title><link href="https://www.rtancman.com.br/python/Quero-programar-por-onde-comecar.html" rel="alternate" type="text/html" title="Quero programar, por onde começar?" /><published>2020-06-27T20:55:00+00:00</published><updated>2020-06-27T20:55:00+00:00</updated><id>https://www.rtancman.com.br/python/Quero-programar-por-onde-comecar</id><content type="html" xml:base="https://www.rtancman.com.br/python/Quero-programar-por-onde-comecar.html">&lt;p&gt;Nesses dias um amigo veio me perguntar sobre como é ser programador e por onde começar? Como essa é uma pergunta que vejo sempre em grupos de tecnologia e em encontros da comunidade, resolvi fazer um post dando dicas de como você pode iniciar a sua carreira em tecnologia.&lt;/p&gt;

&lt;h3 id=&quot;a-pessoa-desenvolvedora-de-software&quot;&gt;A pessoa desenvolvedora de software&lt;/h3&gt;

&lt;p&gt;Acredito que somos profissionais do conhecimento e resolvedores de problemas. Ou seja desenvolver software e criar soluções que melhoram um processo repetitivo automatizando várias etapas. Além disso, temos casos onde soluções são criadas para facilitar o nosso dia a dia em geral como por exemplo o Uber. Dentre essas atividades existem diversas especialidades como desenvolvedor back end, front end, cientistas de dados, desenvolvimento de jogos entre outras.&lt;/p&gt;

&lt;p&gt;Logo essa profissão está sempre relacionada a um contexto ou domínio e na maioria dos casos as pessoas que trabalham com tecnologia precisam entender como resolver esses problemas específicos. Vou dar um exemplo você vai fazer um software para uma escola, nesse caso precisamos entender todo o processo de trabalho que existe nessa atividade. Ou seja além de entender como uma escola funciona, você vai precisar estudar como aplicar a tributação correta para emitir boletos de mensalidades. Com isso, começamos a entender outras questões além do domínio que são necessárias para que aquele negócio funcione. Perfeito, agora vamos aprofundar na parte específica de tecnologia.&lt;/p&gt;

&lt;h3 id=&quot;qual-tecnologia-devo-aprender&quot;&gt;Qual tecnologia devo aprender?&lt;/h3&gt;

&lt;p&gt;Essa pergunta é muito relativa e aqui dependendo para quem você for perguntar possa ter uma resposta diferente (rs…). Procure entender de lógica de programação primeiramente e use uma tecnologia que seja fácil de se aprender. Além disso, precisa ter disciplina e montar um plano de estudos e seguir ele firme e forte!&lt;/p&gt;

&lt;p&gt;A minha dica é vai de Python! Mas o que é isso? Vamos lá, Python é uma linguagem de programação. Todo software é escrito em alguma linguagem. Escolher qual linguagem aprender é difícil, e por este motivo vamos entender porque Python vai te ajudar e facilitar a sua carreira.&lt;/p&gt;

&lt;h3 id=&quot;porque-python&quot;&gt;Porque Python?&lt;/h3&gt;

&lt;p&gt;Simplesmente porque ela foi criada para ser utilizada por qualquer pessoa que não seja envolvida com tecnologia. Sua curva de aprendizado é baixíssima! Ou seja, ela nasceu para ser uma linguagem para os leigos, de fácil entendimento e com foco para os programadores.&lt;/p&gt;

&lt;p&gt;Além disso, é uma linguagem extremamente produtiva e poderosa. Conseguimos desenvolver praticamente tudo em python! Por este motivo é uma linguagem muito bem aceita e utilizada por diversas empresas de tecnologia e na parte de ciência de dados é a linguagem mais utilizada simplesmente porque a mesma facilita as coisas. Eu fiz uma apresentação sobre esse tema e recomendo que você assista ou leia os slides &lt;a href=&quot;https://blumenau.sc.python.org.br/encontros/2019/08/22/python-nas-empresas-edicao-hbsis.html&quot;&gt;clicando aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Python tem uma comunidade ao redor que é INCRÍVEL e não mede esforços para ajudar as pessoas a entrarem no mundo de tecnologia. Sim, além de ser fácil de aprender temos um grupo muito forte que vai te ajudar!&lt;/p&gt;

&lt;h3 id=&quot;aprendendo-python&quot;&gt;Aprendendo Python&lt;/h3&gt;

&lt;p&gt;Essa dica é de ouro e não se aplica somente a essa tecnologia. Atualmente temos diversos conteúdos gratuitos na internet para você começar a estudar de casa mesmo. Vou listar abaixo os que eu acredito serem os melhores cursos para você iniciar a sua carreira:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Python para Zumbis - Fernando Masanori Professor FATEC-SP
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.pycursos.com/python-para-zumbis/&quot;&gt;https://www.pycursos.com/python-para-zumbis/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCripRddD4BnaMcU833ExuwA&quot;&gt;https://www.youtube.com/channel/UCripRddD4BnaMcU833ExuwA&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Curso de Python 3 - Gustavo Guanabara
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.cursoemvideo.com/course/curso-python-3/&quot;&gt;https://www.cursoemvideo.com/course/curso-python-3/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Python for Absolute Beginners Green Chameleon Learning
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/python-for-absolute-beginners-u/&quot;&gt;https://www.udemy.com/python-for-absolute-beginners-u/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ciência da Computação com Python - USP
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/ciencia-computacao-python-conceitos&quot;&gt;https://www.coursera.org/learn/ciencia-computacao-python-conceitos&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Google’s Python Class
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://developers.google.com/edu/python/&quot;&gt;https://developers.google.com/edu/python/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Curso Python 300 - Marcos Castro
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL8eBmR3QtPL0j3QLEjQ6rcx8rVB8Ir893&quot;&gt;https://www.youtube.com/playlist?list=PL8eBmR3QtPL0j3QLEjQ6rcx8rVB8Ir893&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eu recomendo e MUITO Python para Zumbis para quem está começando a programar. A didática do curso é fantástica. Ler a documentação de cada tecnologia que você vai utilizar no dia a dia também é importante e será um guia para tirar as suas dúvidas.&lt;/p&gt;

&lt;p&gt;Outra recomendação é conheca as pessoas que trabalham com desenvolvimento de software. E falando especificamente de Python, temos a comunidade como porta de entrada. Praticamente em todos os lugares do Brasil e do mundo, temos uma comunidade ativa realizando encontros recorrentes. &lt;a href=&quot;https://python.org.br/comunidades-locais/&quot;&gt;Neste link&lt;/a&gt; da Associação Python Brasil conseguimos encontrar a maioria das comunidades locais. Caso você não encontre alguma na sua cidade entre em contato comigo pelo meu site mesmo que eu vou te ajudar a conectar as pessoas próximas a você.&lt;/p&gt;

&lt;h3 id=&quot;fiz-o-curso-e-aê-como-começo-a-trabalhar&quot;&gt;Fiz o curso e aê? Como começo a trabalhar?&lt;/h3&gt;

&lt;p&gt;Nos dias de hoje devido a escassez de pessoas que desenvolvem software no mercado muitas das empresas tem investido em treinamentos gratuitos para quem quer aprender a programar. Ou seja, você participa de um curso e na conclusão do mesmo você pode ser contratado por uma empresa de tecnologia. Vou listar alguns desses programas que eu recomendo para você ficar de olho que são estes aqui:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hbsis.com.br/padawan/&quot;&gt;PADAWAN - HBSIS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://codenation.dev&quot;&gt;Codenation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esses programas abrem uma seleção pela internet e em seguida caso você seja escolhido o treinamento é iniciado. Nesse caso depende muito do contexto da empresa e com isso as tecnologias que você vai aprender vão ser definidas pela mesma. Mas acredito ser uma porta de entrada interessante para iniciar a sua carreira.&lt;/p&gt;

&lt;p&gt;Também recomendo participar de processos seletivos ou programas de estágios e seguindo essa linha eu tenho esses a recomendar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://estag.globo.com/#/voce-nasceu-pra-isso&quot;&gt;Programa de estágio na Globo.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://estagio.b2w.io/&quot;&gt;Programa de estágio na B2W&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;resumindo&quot;&gt;Resumindo…&lt;/h3&gt;

&lt;p&gt;A jornada para ser uma pessoa desenvolvedora de software nem sempre vai ser fácil apesar de todo o cenário favorecedor. Mas é um caminho que pode sim ser muito gratificante para o seu futuro. Não desista dos seus sonhos e conte comigo e com a comunidade para te ajudar neste relacionado a tecnologia!&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Nesses dias um amigo veio me perguntar sobre como é ser programador e por onde começar? Como essa é uma pergunta que vejo sempre em grupos de tecnologia e em encontros da comunidade, resolvi fazer um post dando dicas de como você pode iniciar a sua carreira em tecnologia.</summary></entry><entry><title type="html">Kubernetes para iniciantes</title><link href="https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes.html" rel="alternate" type="text/html" title="Kubernetes para iniciantes" /><published>2020-06-15T20:55:00+00:00</published><updated>2020-06-15T20:55:00+00:00</updated><id>https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes</id><content type="html" xml:base="https://www.rtancman.com.br/kubernetes/kubernetes-para-iniciantes.html">&lt;p&gt;Me lembro como se fosse hoje quando comecei a virtualizar o meu ambiente de desenvolvimento. Antes rodava tudo em uma VM do VirtualBox montando o diretório do meu projeto na VM. Com o passar dos tempos acabei conhecendo o &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; e mais a frente o &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; que foi amor à primeira vista! Desde então passei a gerenciar meu ambiente de desenvolvimento com docker-compose.&lt;/p&gt;

&lt;p&gt;Participei de um movimento de migrar aplicações que rodam no heroku para o Google Cloud utilizando o serviço Kubernetes Engine o GKE. Nesse projeto eu trabalhei bem superficialmente com k8s, apelido do kubernetes. Atualmente venho trabalhando diariamente com essa ferramenta e neste artigo vou contar como foi todo o meu aprendizado e sintetizar os principais casos do dia a dia.&lt;/p&gt;

&lt;h3 id=&quot;o-que-é-o-kubernetes&quot;&gt;O que é o Kubernetes?&lt;/h3&gt;

&lt;p&gt;É um gerenciador de containers onde utilizamos uma sintaxe declarativa para criar nossos serviços na cloud. O kubernetes veio nessa era de containers para facilitar todas as operações e boas práticas que temos hoje disponíveis em cloud para deployar suas aplicações. Com isso foi sendo construído um ecossistema em volta dessa tecnologia com muitos serviços e plugins tais como recursos de monitoração, autoscale, blue-green deployments, service discovery e muitos outros disponíveis pela comunidade.&lt;/p&gt;

&lt;h3 id=&quot;como-ele-funciona&quot;&gt;Como ele funciona?&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&quot;k8s arquitetura&quot; src=&quot;/img/posts/2020/06/k8s-arquitetura.png&quot; style=&quot;max-width: 992px;width: 100%;&quot; /&gt;
Fonte: kubernetes.io&lt;/p&gt;

&lt;p&gt;De forma resumidamente o k8s é uma aplicação em Go que se comunica através de uma API. O Docker não consegue gerenciar containers de maneira remota e é aí que o k8s passa a fazer sentido. Essa arquitetura acima foi retirada do site oficial do kubernetes e pode ser acessada &lt;a href=&quot;https://kubernetes.io/docs/concepts/overview/components/&quot;&gt;aqui&lt;/a&gt; onde temos a documentação que detalha esse processo por inteiro. Mas para vocês entenderem de uma forma geral, temos 2 nodes onde em 1 temos rodando a API do k8s com todo os seus componentes como etcd que é o banco de chave valor onde ficam salvas todas as configurações e no segundo node temos o kubelet que é o cliente responsável em se comunicar com a API do k8s e aplicar as alterações nos containers que rodam em cada máquina.&lt;/p&gt;

&lt;p&gt;O objetivo desse artigo é ser um guia prático de como você pode executar os serviços em ambiente local ou até mesmo em cloud, não vou entrar em detalhes de como funciona todos os componentes do kubernetes. Para isso você pode e deve ler a documentação para entender como essa ferramenta irá te ajudar no dia a dia. &lt;a href=&quot;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&quot;&gt;Neste link você confere a documentação do Kubernetes que é bem completa e repleta de exemplos.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora precisamos instalar o nosso ambiente de trabalho que basicamente vai precisar do Docker, Kubernetes e algumas outras aplicações para deployar o nosso sistema.&lt;/p&gt;

&lt;h3 id=&quot;instalação&quot;&gt;Instalação:&lt;/h3&gt;

&lt;p&gt;Vamos precisar instalar o &lt;a href=&quot;http://kubernetes.io/docs/tasks/tools/install-kubectl/&quot;&gt;kubectl&lt;/a&gt; e o &lt;a href=&quot;http://github.com/kubernetes/minikube#installation&quot;&gt;minikube&lt;/a&gt; para quem tem linux. No  mac, o próprio docker já tem um suporte para subir um cluster k8s. Caso você esteja rodando no mac, segue um tutorial de como levantar um cluster local &lt;a href=&quot;https://xebia.com/blog/running-kubernetes-locally-docker-mac-os-x/&quot;&gt;nesse link aqui&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kubectl: É o CLI para iteragir com o cluster k8s.&lt;/li&gt;
  &lt;li&gt;Minikube: Simula em uma VM o funcionamento de um cluster k8s em ambiente local.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para você já sair executando os comandos do kubectl recomendo esses playgrounds:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.katacoda.com/courses/kubernetes/playground&quot;&gt;Katacoda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://labs.play-with-k8s.com/&quot;&gt;Play with Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora que já temos um um cluster rodando, vamos iniciar dar uma explorada nos principais comandos do k8s que vamos utilizar durante o desenvolvimento.&lt;/p&gt;

&lt;p&gt;O k8s permite que você gerencie diversos clusters e por isso e sempre bom ver os que estão configurados com o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl config get-contexts&lt;/code&gt;. Exemplo:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl config get-contexts
CURRENT NAME CLUSTER AUTHINFO NAMESPACE

docker-desktop docker-desktop docker-desktop

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker-for-desktop docker-desktop docker-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para selecionar um contexto você roda o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl config use-context docker-for-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Esses passos são importantes principalmente se você já tem acesso a um cluster k8s na sua máquina para não criar nada em cluster que já exista ;)&lt;/p&gt;

&lt;h3 id=&quot;k8s-em-prática-com-um-pod-simples&quot;&gt;K8S em prática com um pod simples&lt;/h3&gt;

&lt;p&gt;Vamos subir agora um Pod com o Wordpress baseado em uma imagem do Docker que está disponível no &lt;a href=&quot;https://hub.docker.com/_/wordpress/&quot;&gt;hub docker do wordpress&lt;/a&gt; para testar alguns dos comandos do k8s. Não se preocupe com o arquivo abaixo vamos entender ele melhor mais a frente ;)&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-dumb.yaml com o seguinte conteudo abaixo:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pod&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-wp-1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:php7.2-fpm&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;9000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora vamos subir o nosso primeiro Pod! Para isso vamos rodar o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-dumb.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Acima vimos o nosso primeiro comando o kubectl apply como vocês já viram, ele é responsável em aplicar alterações feita no arquivo wp-dumb.yaml. Após ele aplicar essa alteração o k8s se encarrega em subir um Pod com a configuração descrita no manifesto do aquivo wp-dumb.yaml. Agora podemos rodar outros comandos para visualizar como esta este Pod recem criado.&lt;/p&gt;

&lt;p&gt;Para listar todos os pods rodando vamos executar o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get&quot;&gt;kubectl get&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods

&lt;span class=&quot;c&quot;&gt;#resultado&lt;/span&gt;

NAME READY STATUS RESTARTS AGE

meu-blog 1/1 Running 0 59s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O comando get diz como está o nosso Pod em nosso cluster. Veja em detalhes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NAME: é o nome do Pod. E este nome é ÚNICO.&lt;/li&gt;
  &lt;li&gt;READY: diz que o nosso Pod está rodando / pronto.&lt;/li&gt;
  &lt;li&gt;STATUS: é o status atual de execução&lt;/li&gt;
  &lt;li&gt;RESTARTS: quantidade de restarts que o pod teve&lt;/li&gt;
  &lt;li&gt;AGE: A quanto tempo ele foi criado&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get&quot;&gt;Aqui na documentação do k8s&lt;/a&gt; você tem todos os exemplos dos comandos a serem executados. Mas vamos falar dos que mais rodamos no dia a dia.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# para buscar um pod por nome&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods meu-blog

&lt;span class=&quot;c&quot;&gt;# para buscar um pod por label&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress

&lt;span class=&quot;c&quot;&gt;# para retornar em outro formato de output&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; yaml
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Também podemos acessar esse Pod rodando o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#exec&quot;&gt;kubectl exec&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; meu-blog bash
root@meu-blog:/var/www/html#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Descrição desse Pod rodando o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#describe&quot;&gt;kubectl describe&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl describe pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl describe pods meu-blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copiando arquivos para o container ou do container para a sua máquina com o comando cp rodando o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#cp&quot;&gt;kubectl cp&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# criando um arquivo qualquer&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lala&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; arquivo-lala.txt

&lt;span class=&quot;c&quot;&gt;# copiando um arquivo para o container&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl cp arquivo-lala.txt meu-blog:/var/www/html

&lt;span class=&quot;c&quot;&gt;# copiando um arquivo do container para sua maquina&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl cp meu-blog:/var/www/html/arquivo-lala.txt arquivo-lele.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Verificando CPU e Memoria com o comando top rodando o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#top&quot;&gt;kubectl top&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl top pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl top pods meu-blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remover um Pod rodando o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#delete&quot;&gt;kubectl delete&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl delete pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl delete pods meu-blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se você chegou até aqui MEUS PARABÉNS você conseguiu subir um pod e principalmente executar uns dos comandos que mais utilizamos no dia a dia! Na documentação oficial, temos uma parte muito interessante com os “macetes” para servir como um guia quando você não se lembrar exatamente como é cada comando do k8s que é o &lt;a href=&quot;https://kubernetes.io/docs/reference/kubectl/cheatsheet/&quot;&gt;kubectl Cheat Sheet&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;k8s-em-prática-subindo-um-wordpress-completo&quot;&gt;K8S em prática subindo um wordpress completo&lt;/h3&gt;

&lt;p&gt;Nosso aplicação que irá rodar no kubernetes vai ser um wordpress um dos principais cms do mundo. Teremos a seguinte arquitetura:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;wordpress no k8s arquitetura&quot; src=&quot;/img/posts/2020/06/wp-k8s.jpg&quot; style=&quot;max-width: 992px;width: 100%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No exemplo anterior a gente utilizou o objeto Pod que é o objeto mais genérico do k8s. &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/&quot;&gt;Aqui na documentação você tem todos os detalhes&lt;/a&gt;. Agora nesse exemplo vamos utilizar o &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&quot;&gt;Deployment&lt;/a&gt; para criar um Pod mais inteligente dizendo em seu manifesto a quantidade de réplicas que devem sempre executar em nosso cluster. Isso mesmo, o k8s com base no manifesto vai gerenciar a execução desse pod podendo remover e recriar o mesmo caso alguma coisa de errado aconteça. Vamos a esse manifesto:&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-deployment.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:5.4.2-php7.2-apache&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora vamos subir o nosso primeiro deployment!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-deployment.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sim temos 3 pods em execução vamos olhar rodando o comando get:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress-escalavel
NAME READY STATUS RESTARTS AGE
meu-blog-escalavel-69f498dc5b-25zb7 1/1 Running 0 19s
meu-blog-escalavel-69f498dc5b-7dx4z 1/1 Running 0 19s
meu-blog-escalavel-69f498dc5b-zbtvs 1/1 Running 0 19s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora vamos brincar com o k8s vamos deletar o um dos Pods criados e ficar dando o get para ver o que esta irá acontecer.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl delete pod meu-blog-escalavel-69f498dc5b-c7hvd
pod &lt;span class=&quot;s2&quot;&gt;&quot;meu-blog-escalavel-69f498dc5b-c7hvd&quot;&lt;/span&gt; deleted

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress-escalavel
NAME READY STATUS RESTARTS AGE
meu-blog-escalavel-69f498dc5b-7dx4z 1/1 Running 0 4m33s
meu-blog-escalavel-69f498dc5b-c7hvd 0/1 Terminating 0 36s
meu-blog-escalavel-69f498dc5b-jb424 1/1 Running 0 6s
meu-blog-escalavel-69f498dc5b-zbtvs 1/1 Running 0 4m33s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Caso algum pode seja deletado o k8s sobe outro o mais rápido possível e mantém sempre o que está configurado no manifesto do arquivo wp-deployment.yaml. Agora vamos explorar novos comandos que os deployments tem que é o &lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#scale&quot;&gt;kubectl scale&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl scale deployment meu-blog-escalavel &lt;span class=&quot;nt&quot;&gt;--replicas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wordpress-escalavel

NAME READY STATUS RESTARTS AGE
meu-blog-escalavel-69f498dc5b-66bbr 1/1 Running 0 7s
meu-blog-escalavel-69f498dc5b-7dx4z 1/1 Running 0 22h
meu-blog-escalavel-69f498dc5b-jb424 1/1 Running 0 22h
meu-blog-escalavel-69f498dc5b-x57f8 1/1 Running 0 7s
meu-blog-escalavel-69f498dc5b-zbtvs 1/1 Running 0 22h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto nosso sistema do wordpress está escalável podendo subir ou diminuir réplicas. Agora falta a gente configurar o nosso load balancer, que no caso do k8s será o &lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;Service&lt;/a&gt;. Este é responsável em localizar o nosso deployment e expor o serviço do mesmo através de um endereço tendo o funcionamento comparado ao de um load balancer distribuindo a carga. Vamos a esse manifesto:&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-service.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel-service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;LoadBalancer&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TCP&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8080&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;targetPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora vamos subir o nosso primeiro service!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; wp-service.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para visualizar o nosso service executando rodamos o comando get mas agora incluindo o tipo service. Sim o k8s segue um padrão e trocando o kind você lista somente os pods de um tipo específico.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get service

NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AGE
meu-blog-escalavel-service ClusterIP 10.102.166.220 localhost 8080/TCP 7m57s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora todos os nossos deployments ficam acessíveis através do service recém criado que consegue localizar os pods por conta da configuração de selector que utiliza o label aplicado a um pod para localizar para onde a requisição deve chegar. Agora basta chamar localhost:8080 que vamos bater no service e o mesmo redireciona o tráfego para os nossos deployments como um load balancer. Agora que já temos o nosso LB e wordpress de pé precisamos subir o nosso banco de dados. Vamos a esse manifesto:&lt;/p&gt;

&lt;p&gt;Crie o arquivo wp-mariadb.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Recreate&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rtancman/mariadb-local&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Always&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;adminroot&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-user&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;q1w2e3r4&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-k8s&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com isso agora como já sabemos, falta criar o nosso service e vamos lá! Crie o arquivo wp-mariadb-service.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-service&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;LoadBalancer&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-wp&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TCP&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;targetPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora vamos dar apply em todos os manifestos recém criados:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;$ kubectl apply -f wp-mariadb.yaml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;$ kubectl apply -f wp-mariadb-service.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Agora temos o nosso banco rodando! Com isso vamos alterar o nosso manifesto do wp-deployment.yaml para incluir as variáveis de ambiente que tem o acesso ao banco de dados.&lt;/p&gt;

&lt;p&gt;Altere o arquivo wp-deployment.yaml com o seguinte conteúdo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;meu-blog-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress-escalavel&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:5.4.2-php7.2-apache&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb-service&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_USER&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-user&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;q1w2e3r4&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wp-k8s&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;containerPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MEUS PARABÉNS! Você acabou de configurar a nossa arquitetura proposta no exemplo e tudo esta deve estar rodando normalmente se você acessar o &lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt; deve cair na página de configuração do wordpress e seguindo os passos você terá o mesmo rodando no seu cluster k8s \o/.&lt;/p&gt;

&lt;p&gt;Kubernetes é uma ferramenta com muitos plugins e serviços e irei fazer um novo post melhorando essa nossa arquitetura utilizando outros objetos do k8s como o &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/secret/&quot;&gt;Secrets&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/configmap/&quot;&gt;Configmap&lt;/a&gt;, &lt;a href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistent-volumes&quot;&gt;PersistentVolume&lt;/a&gt; e &lt;a href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims&quot;&gt;PersistentVolumeClaim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Referências:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/&quot;&gt;https://kubernetes.io/docs/concepts/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/&quot;&gt;https://kubernetes.io/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xebia.com/blog/running-kubernetes-locally-docker-mac-os-x/&quot;&gt;https://xebia.com/blog/running-kubernetes-locally-docker-mac-os-x/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/containers-101/local-kubernetes-for-mac-minikube-vs-docker-desktop-f2789b3cad3a&quot;&gt;https://medium.com/containers-101/local-kubernetes-for-mac-minikube-vs-docker-desktop-f2789b3cad3a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grande abraço xD&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Me lembro como se fosse hoje quando comecei a virtualizar o meu ambiente de desenvolvimento. Antes rodava tudo em uma VM do VirtualBox montando o diretório do meu projeto na VM. Com o passar dos tempos acabei conhecendo o Vagrant e mais a frente o Docker que foi amor à primeira vista! Desde então passei a gerenciar meu ambiente de desenvolvimento com docker-compose.</summary></entry><entry><title type="html">Criando um sistema de notificações com pywebpush</title><link href="https://www.rtancman.com.br/python/criando-sistema-de-notificacoes-com-pywebpush.html" rel="alternate" type="text/html" title="Criando um sistema de notificações com  pywebpush" /><published>2019-03-30T20:55:00+00:00</published><updated>2019-03-30T20:55:00+00:00</updated><id>https://www.rtancman.com.br/python/criando-sistema-de-notificacoes-com-pywebpush</id><content type="html" xml:base="https://www.rtancman.com.br/python/criando-sistema-de-notificacoes-com-pywebpush.html">&lt;p&gt;Esses dias um amigo veio me perguntar no GruPy Blumenau em como criar um sistema de notificações e acabei passando meio que o caminho das pedras que poderia utilizar o &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt; ou utilizar o &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/notification&quot;&gt;notification API&lt;/a&gt; para isso. Como eu nunca tinha desenvolvido um sistema para esse caso resolvi então criar um post sobre este tema.&lt;/p&gt;

&lt;h2 id=&quot;web-push-notifications&quot;&gt;Web Push Notifications&lt;/h2&gt;

&lt;p&gt;Existe um padrão para realizar esse tipo de operação na web que é o &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Push_API&quot;&gt;Push API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2019/03/Push_API.jpg&quot; alt=&quot;Push API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Basicamente o que acontece é o seguinte:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;O cliente solicita permissão ao navegador para receber notificações&lt;/li&gt;
  &lt;li&gt;O navegador gera uma credencial de acesso e o cliente passa esses dados para o servidor&lt;/li&gt;
  &lt;li&gt;O servidor manda uma notificação com as credenciais para o serviço&lt;/li&gt;
  &lt;li&gt;O serviço notifica os navegadores&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Todo este processo utiliza o &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-webpush-protocol-12&quot;&gt;Web Push Protocol&lt;/a&gt;. Este protocolo descreve como toda essa comunicação deve ser feita e com isso temos um padrão para enviar notificações para os navegadores. O projeto &lt;a href=&quot;https://github.com/web-push-libs&quot;&gt;web-push-libs&lt;/a&gt; tem implementações desse protocolo para diversas linguagens. Neste post vamos utilizar a implementação feita para Python que é o &lt;a href=&quot;https://github.com/web-push-libs/pywebpush&quot;&gt;pywebpush&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;sistema-de-notifição&quot;&gt;Sistema de Notifição&lt;/h2&gt;

&lt;p&gt;Vamos criar uma API e um site. Todo o código esta disponível no repositorio &lt;a href=&quot;https://github.com/rtancman/flask-pywebpush&quot;&gt;flask-pywebpush&lt;/a&gt;. Além disso apaixonado por Makefile como sou criei todos os comandos que iremos executar nele para saber mais acesse o &lt;a href=&quot;https://github.com/rtancman/flask-pywebpush/blob/master/Makefile&quot;&gt;arquivo e veja os comandos na íntegra&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;api-de-notificação&quot;&gt;API de notificação&lt;/h3&gt;
&lt;p&gt;Na nossa API vamos utilizar flask, redis e pywebpush para desenvolver nossa aplicação.&lt;/p&gt;

&lt;p&gt;A API armazenará as informações de assinatura dos usuários e distribuirá a chave pública VAPID. VAPID é o curto prazo para Identificação Voluntária do Servidor de Aplicativos, a chave pública gerada será usada através do aplicativo cliente.&lt;/p&gt;

&lt;p&gt;Gerando as chaves:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
make generate.vapid

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;OBS: Estou usando como base &lt;strong&gt;linux&lt;/strong&gt; e o &lt;strong&gt;openssl&lt;/strong&gt;. Portanto para gerar essas chaves você precisa ter o openssl instalado em sua máquina.&lt;/p&gt;

&lt;p&gt;Após rodar o comando vamos ter gerado os seguintes arquivos no diretório &lt;strong&gt;flaskwebpush/certs&lt;/strong&gt; no projeto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;private_key.txt&lt;/li&gt;
  &lt;li&gt;public_key.txt&lt;/li&gt;
  &lt;li&gt;vapid_private.pem&lt;/li&gt;
  &lt;li&gt;vapid_public.pem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nosso backend terá as seguintes rotas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/api/subscribe&lt;/li&gt;
  &lt;li&gt;/api/notify&lt;/li&gt;
  &lt;li&gt;/api/unsubscribe&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apisubscribe&quot;&gt;/api/subscribe&lt;/h3&gt;

&lt;p&gt;Responsável por inscrever o cliente para receber notificações do nosso site. Esta rota atende aos verbos:&lt;/p&gt;

&lt;p&gt;GET - Responsável por retornar a chave pública a ser utilizada no cliente que é o nosso site
POST - Responsável por inscrever o cliente. Aqui recebemos o endereço e as credenciais de acesso para realizar o push de notificação.&lt;/p&gt;

&lt;p&gt;Segue o código:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nd&quot;&gt;@api.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/subscribe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'public_key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VAPID_PUBLIC_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subscription_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'endpoint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'endpoint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'keys'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'keys'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'expiration_time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'expirationTime'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uuid4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'webpush:subscription:info:{}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscription_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sadd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'webpush:subscriptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;apinotify&quot;&gt;/api/notify&lt;/h3&gt;

&lt;p&gt;Responsável em realizar o push dessa notificação aos clientes inscritos no nosso site. Esta recebe um POST com os dados da mensagem que queremos enviar aos clientes. Segue o código:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nd&quot;&gt;@api.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/notify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pywebpush&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebPushException&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sub_webpush_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'webpush:subscription:info:{}'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;message_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smembers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'webpush:subscriptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sub_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sub_webpush_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sub_val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sub_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;webpush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;subscription_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;vapid_private_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VAPID_PRIVATE_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;vapid_claims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VAPID_CLAIMS&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebPushException&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{} notification(s) sent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;apiunsubscribe&quot;&gt;/api/unsubscribe&lt;/h3&gt;

&lt;p&gt;Responsável por descadastrar o cliente que não quer mais receber notificações do nosso site. Recebe um POST com o identificador do cliente para remover. Segue o código:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nd&quot;&gt;@api.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/unsubscribe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unsubscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'client_uuid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'client_uuid is required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'webpush:subscription:info:{}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redis_webpush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;srem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'webpush:subscriptions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webpush_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'unsubscribed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora que conhecemos a nossa API vamos rodar o nosso projeto:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
git clone git@github.com:rtancman/flask-pywebpush.git

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;flask-pywebpush

python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; venv .venv

make setup setup.web

&lt;span class=&quot;c&quot;&gt;# levando o redis com docker&lt;/span&gt;
make run.redis

&lt;span class=&quot;c&quot;&gt;# rodando a api&lt;/span&gt;
make run.api

&lt;span class=&quot;c&quot;&gt;# rodando o site web&lt;/span&gt;
run.web

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com a nossa aplicação rodando, abra no seu navegador o endereço &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;. Neste link temos o nosso site que foi baseado no projeto &lt;a href=&quot;https://github.com/GoogleChromeLabs/web-push-codelab&quot;&gt;GoogleChromeLabs/web-push-codelab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos realizar a ação para se inscrever:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2019/03/notificacoes-clicar-para-receber.gif&quot; alt=&quot;Clicando para receber notificações&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após clicar no button, vamos ver as credenciais de acesso que são enviadas ao nosso servidor. Após este processo, agora vamos enviar a nossa mensagem pelo servidor e para isso vamos utilizar o curl para fazer o post:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  http://127.0.0.1:5000/api/notify &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cache-control: no-cache'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
	&quot;title&quot;: &quot;Minha notificação!&quot;,
	&quot;url&quot;: &quot;http://localhost:8080/&quot;,
	&quot;body&quot;: &quot;O corpo da minha notificação com a menssagem.&quot;
}'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após realizar este comando você irá receber uma notificação como abaixo:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2019/03/notificacoes-recebendo-notificacao.gif&quot; alt=&quot;Recebendo notificações&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com isso fechamos por aqui nosso sistema simples de notificação. Para testar a API diretamente do postman basta importar o arquivo &lt;a href=&quot;https://github.com/rtancman/flask-pywebpush/flaskwebpush.postman_collection.json&quot;&gt;flaskwebpush.postman_collection.json&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para se aprofundar mais no assunto recomendo a leitura desses links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/push-notifications/&quot;&gt;https://developers.google.com/web/fundamentals/push-notifications/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Push_API&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/Push_API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://serviceworke.rs/web-push.html&quot;&gt;https://serviceworke.rs/web-push.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Esses dias um amigo veio me perguntar no GruPy Blumenau em como criar um sistema de notificações e acabei passando meio que o caminho das pedras que poderia utilizar o Firebase ou utilizar o notification API para isso. Como eu nunca tinha desenvolvido um sistema para esse caso resolvi então criar um post sobre este tema.</summary></entry><entry><title type="html">Organizando AWS Lambda escrito em Python</title><link href="https://www.rtancman.com.br/python/aws/organizando-aws-lambda-escrito-python.html" rel="alternate" type="text/html" title="Organizando AWS Lambda escrito em Python" /><published>2019-01-11T22:55:00+00:00</published><updated>2019-01-11T22:55:00+00:00</updated><id>https://www.rtancman.com.br/python/aws/organizando-aws-lambda-escrito-python</id><content type="html" xml:base="https://www.rtancman.com.br/python/aws/organizando-aws-lambda-escrito-python.html">&lt;p&gt;Continuando a série de posts relacionados ao AWS Lambda. Caso você tenha lido o primeiro post ou não conheça este serviço da Amazon, recomendo a leitura do artigo &lt;a href=&quot;/python/aws/aws-lambda-e-python.html&quot;&gt;AWS Lambda + Python - Como criar o setup de um projeto Python para rodar no AWS Lambda.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No meu primeiro contato com o lambda não procurei nenhum framework para organizar o trabalho e apaixonado por &lt;a href=&quot;https://en.wikipedia.org/wiki/Make_(software)&quot;&gt;Make&lt;/a&gt; acabei caindo de cabeça automatizando praticamente todos os comandos do &lt;a href=&quot;https://docs.aws.amazon.com/cli/latest/reference/lambda/index.html&quot;&gt;awscli lambda&lt;/a&gt;. Isso no início foi bem legal e importante para entender bem o serviço e os comandos, mas depois de um tempo, com a complexidade de alguns projetos se tornou algo difícil de se manter. Além disso, por mais simples que o Make seja existem pessoas que não gostam de utilizar essa ferramenta por incrível que pareça. Neste caso, construímos uma API para uma empresa toda utilizando lambdas. Este foi o meu primeiro projeto. Meu time definiu a arquitetura, configuração e o processo de deploy.&lt;/p&gt;

&lt;h2 id=&quot;apex&quot;&gt;Apex&lt;/h2&gt;

&lt;p&gt;Conheci essa ferramenta através de um amigo após ter criado um “framework em Make” para gerenciar as ações do lambda. Após alguns testes, entendi o potencial do framework e a sua simplicidade para organizar e gerenciar funções no AWS Lambda. Sem sombras de dúvidas entender os comandos facilitaram o entendimento do &lt;a href=&quot;http://apex.run/&quot;&gt;apex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O apex propõe uma estrutura de diretórios para se trabalhar com o lambda. Também foi pensada em uma forma de deployar o seu lambda para ambientes diferentes como staging e production por exemplo. Além disso, a ferramenta simplifica a forma de realizar atualizações e deploys no seu lambda criando arquivos de configurações. Com ele fica simples versionar o projeto. Agora vamos ao que interessa vamos conhecer a ferramenta e depois em seguida vou detalhar os principais comandos. Segue abaixo o vídeo de apresentação do apex:&lt;/p&gt;

&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;
&lt;div class=&quot;embed-container&quot;&gt;    &lt;iframe title=&quot;YouTube video player&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;//www.youtube.com/embed/PvvlCvfljz0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Agora que conhecemos o apex, vamos aos principais comandos que executamos no video que são eles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;apex init&lt;/li&gt;
  &lt;li&gt;apex deploy&lt;/li&gt;
  &lt;li&gt;apex list&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apex-init&quot;&gt;apex init&lt;/h3&gt;

&lt;p&gt;Cria a Role na AWS com a configuração mínima de execução do lambda e uma estrutura inicial para se trabalhar com lambdas seguindo este formato:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
├── functions
│ └── hello
│   └── index.js
└── project.json

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Os comandos deploy e list os nomes são sugestivos e fazem o deploy criando ou atualizando o lambda existente e o outro lista todos os lambdas criados.&lt;/p&gt;

&lt;p&gt;Para facilitar o setup de cada linguagem suportada no apex, temos um link na documentação com vários &lt;a href=&quot;https://github.com/apex/apex/tree/master/_examples&quot;&gt;exemplos de caso de uso que você pode ver clicando neste link.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que já temos ideia do que é o apex e como ele funciona, vamos ver como instalar outros pacotes Pythons no nosso lambda.&lt;/p&gt;

&lt;h2 id=&quot;utilizando-pacotes&quot;&gt;Utilizando pacotes&lt;/h2&gt;

&lt;p&gt;Sim meus amigos, o lambda suporta instalação de outras bibliotecas em nosso código. Basicamente precisamos instalar as dependências no mesmo diretório onde a nossa função lambda foi criada, zipar todo o conteúdo e subir em seguida para o lambda.&lt;/p&gt;

&lt;p&gt;Em outras linguagens como Ruby e JS, as dependências normalmente ficam na raiz do projeto no mesmo nível de diretório onde se encontram os arquivos Gemfile ou Package.json. No Python ao instalar dependências para um projeto precisamos criar uma &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;virtualenv&lt;/a&gt;. E agora como fazer? Então amigos ao invés de rodar o pip instal -r requirements.txt vamos precisar mais um argumento o -t. Esta opção permite a gente passar o caminho onde vão ser criados os arquivos de dependências do nosso projeto. Exemplo:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
pip install &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; CAMINHO_PARA_CRIAR_ARQUIVOS_DEPENDENCIAS

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Logo basta colocar esse caminho para ser o mesmo onde esta no nosso arquivo main.py que é a nossa função lambda e em seguida zipar e subir tudo como fazemos normalmente. Vejamos o seguinte exemplo para utilizar a lib &lt;a href=&quot;http://docs.python-requests.org/en/master/&quot;&gt;requests&lt;/a&gt; do Python.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;#criando o arquivo main.py&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;
import requests


def handle(event, context):
    r = requests.get('https://api.github.com/events')
    return {
        'texto': r.text,
    }

&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; main.py

&lt;span class=&quot;c&quot;&gt;#criando o requirements.txt&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;requests&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; requirements.txt

&lt;span class=&quot;c&quot;&gt;#instalando as dependencias para o lambda&lt;/span&gt;
pip install &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# zipando&lt;/span&gt;
zip &lt;span class=&quot;nt&quot;&gt;-qr&lt;/span&gt; hellorequests.zip &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# criar a nossa função via awscli.&lt;/span&gt;
aws lambda create-function &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--handler&lt;/span&gt; main.handle &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--runtime&lt;/span&gt; python3.7 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hellorequests'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--zip-file&lt;/span&gt; fileb://./hellorequests.zip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--role&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PEGUE_SUA_ARN'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto tendo feito isso temos o nosso lambda sendo executado incluindo o requests como dependências. Dessa maneira você pode instalar qualquer biblioteca na sua função lambda. &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html&quot;&gt;Aqui neste link você tem a documentação da AWS explicando em detalhes esse processo.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Um grande ponto de atenção ao utilizar dependências com linguagens dinâmicas, é que a algumas bibliotecas feitas em Python fazem &lt;a href=&quot;https://en.wikipedia.org/wiki/Wrapper_function&quot;&gt;wrapper&lt;/a&gt; para funções escritas em C e outras funções do SO. Ou seja, o lambda roda em cima de uma &lt;a href=&quot;https://aws.amazon.com/pt/amazon-linux-ami/&quot;&gt;Amazon Linux AMI&lt;/a&gt; com isso podemos ter problemas de compatibilidades ao instalar bibliotecas. É nessa hora que o &lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; entra para nos ajudar! Ou seja, o ideal para não sofrer com esse tipo de problema e realizar a instalação em um &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/AmazonECR/latest/userguide/amazon_linux_container_image.html&quot;&gt;container que tenha o Amazon Linux AMI&lt;/a&gt;. Acessando o &lt;a href=&quot;https://hub.docker.com/&quot;&gt;hub docker&lt;/a&gt; temos acesso a essa imagem que você pode encontrar também por este link [https://hub.docker.com/&lt;em&gt;/amazonlinux/](https://hub.docker.com/&lt;/em&gt;/amazonlinux/).&lt;/p&gt;

&lt;p&gt;Agora com esse detalhe em mente vamos realizar a nossa instalação utilizando o docker com a imagem da AWS. Vamos fazer os seguintes passos:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Criar o nosso Dockerfile com as configurações necessários para o Python&lt;/li&gt;
  &lt;li&gt;Rodar o container para instalar as dependências&lt;/li&gt;
  &lt;li&gt;Subir o nosso lambda&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Para isso eu criei um gist para mostrar você incluir no seu projeto Python 3.7.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/4ce09756dd3ffe465ca6000f23496af5.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Agora basta criar os arquivos com base no gist e rodar os seguintes comandos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
make lambda.docker.build lambda.docker.pkgcreate

&lt;span class=&quot;c&quot;&gt;# zipando&lt;/span&gt;

zip &lt;span class=&quot;nt&quot;&gt;-qr&lt;/span&gt; hellorequests.zip &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# criar a nossa função via awscli.&lt;/span&gt;

aws lambda create-function &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--handler&lt;/span&gt; main.handle &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--runtime&lt;/span&gt; python3.7 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hellorequests'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--zip-file&lt;/span&gt; fileb://./hellorequests.zip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--role&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PEGUE_SUA_ARN'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com isso você tem um ambiente mais “seguro” para instalar as suas dependências. Vale ainda dar uma olhada no projeto &lt;a href=&quot;https://github.com/lambci/docker-lambda&quot;&gt;lambda-ci&lt;/a&gt; que tem uma variedade de imagens prontas para instalar os seus lambdas. Você ainda pode encontrar mais alguns problemas como algumas bibliotecas específicas e caso isso aconteça comente nesse post que eu vou procurar te ajudar ;)&lt;/p&gt;

&lt;p&gt;Resumindo mostrei o funcionamento básico do apex, como instalar as dependencias e ficar atento com os possíveis problemas de incompatibilidade de bibliotecas. Nos próximos posts vou mostrar casos reais de utilização do AWS Lambda criando uma api e consumido tarefas em background utilizando SQS e Kinesis.&lt;/p&gt;

&lt;p&gt;Comente sobre o que você achou desse post e me conte o você quer saber ou fazer utilizando Python e Lambdas.&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Continuando a série de posts relacionados ao AWS Lambda. Caso você tenha lido o primeiro post ou não conheça este serviço da Amazon, recomendo a leitura do artigo AWS Lambda + Python - Como criar o setup de um projeto Python para rodar no AWS Lambda.</summary></entry><entry><title type="html">AWS Lambda + Python</title><link href="https://www.rtancman.com.br/python/aws/aws-lambda-e-python.html" rel="alternate" type="text/html" title="AWS Lambda + Python" /><published>2019-01-09T14:10:00+00:00</published><updated>2019-01-09T14:10:00+00:00</updated><id>https://www.rtancman.com.br/python/aws/aws-lambda-e-python</id><content type="html" xml:base="https://www.rtancman.com.br/python/aws/aws-lambda-e-python.html">&lt;p&gt;Vamos falar de AWS, vamos falar de lambdas e de python! Isso mesmo, nesse artigo vou começar uma série de posts sobre essas tecnologias.&lt;/p&gt;

&lt;p&gt;A AWS é uma plataforma de serviços em cloud com as mais variadas funções. Neste artigo vamos abordar o &lt;a href=&quot;https://aws.amazon.com/lambda&quot;&gt;AWS Lambda&lt;/a&gt;. O Lambda é um serviço que permite você rodar códigos sem ter a necessidade de ter uma máquina ligada o tempo todo. O lambda é executado através de gatilhos que são configurados no serviço. Atualmente podemos rodar códigos nas seguintes linguagens:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/python-programming-model.html&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/java-programming-model.html&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/go-programming-model.html&quot;&gt;Go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/dotnet-programming-model.html&quot;&gt;C#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/lambda-ruby.html&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos utilizar o Python para exemplificar como podemos utilizar o lambda. Antes de começar a executar este serviço precisamos entender o contrato que serviço determinou para a sua utilização. Todo código a ser executado precisa estar dentro de uma função de inicialização que recebe 2 argumentos que são o event e o context. A estrutura da função fica nesse formato:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handler_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some_value&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;event:&lt;/strong&gt; É o parâmetro principal. Neste argumento recebemos os dados envidados pelos serviços da AWS podendo conter dados de uma mensagem recebida no &lt;a href=&quot;https://aws.amazon.com/sqs&quot;&gt;SQS&lt;/a&gt; e até mesmo dados de um request repassado pelo &lt;a href=&quot;https://aws.amazon.com/api-gateway/&quot;&gt;API Gateway&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; Neste recebemos um objeto LambdaContext. Temos neste objeto informações do contexto de invocação deste lambda como a quantidade de memória configurada até o ARN de quem invocou esta função. &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html&quot;&gt;Aqui temos uma explicação detalhada deste objeto.&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Caso você queira saber mais sobre essa estrutura do serviço de uma olhada &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/python-programming-model-handler-types.html&quot;&gt;neste item da documentação do lambda.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que já conhecemos a estrutura do lambda vamos criar uma função e para isso temos duas opções via console da AWS ou via terminal utilizando o &lt;a href=&quot;https://aws.amazon.com/cli/&quot;&gt;awscli&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vamos explorar o console da AWS primeiramente. Acessando o serviço vamos encontra esta tela inicial:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2019/01/awslambda/1-aws-lambda-telainicial.gif&quot; alt=&quot;aws lambda tela inicial&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Atualmente temos na tela de entrada do lambda um sandbox utilizando JS para brincar com o lambda e de fato rodar o seu primeiro “Hello World”. Mas vamos explorar a criação de uma nova função.&lt;/p&gt;

&lt;p&gt;Na criação de uma função lambda temos opções para From Scratch, Blueprints e AWS Serveless Aplication Repository.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;From Scratch:&lt;/strong&gt; É para criar funções do zero.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Blueprints:&lt;/strong&gt; São exemplos de funções para atividades recorrentes na AWS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;AWS Serveless Aplication Repository:&lt;/strong&gt; São exemplos de aplicações Serverless. Neste temos exemplos de arquiteturas utilizando os serviços da AWS e você consegue facilmente instalar e rodar.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nosso foco aqui é mostrar a utilização do lambda From Scratch. Vamos criar uma função lambda com suporte a linguagem python na versão 3.7. O lambda precisa de uma role para execução e você pode criar &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/lambda/latest/dg/intro-permission-model.html&quot;&gt;seguindo essa documentação&lt;/a&gt;. Para o nosso exemplo vamos criar uma AWSLambdaBasicExecutionRole.
&lt;img src=&quot;/img/posts/2019/01/awslambda/2-aws-lambda-criando-role.gif&quot; alt=&quot;aws lambda criando role&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lembrando que você também pode utilizar as templates disponíveis para o serviço que você vai ligar a sua função lambda.
&lt;img src=&quot;/img/posts/2019/01/awslambda/3-aws-lambda-criando-role-seguindo-templates.gif&quot; alt=&quot;aws lambda criando role seguindo templates&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com a nossa role criada vamos ao que interessa e criar a nossa função lambda!
&lt;img src=&quot;/img/posts/2019/01/awslambda/4-aws-lambda-criando.gif&quot; alt=&quot;aws lambda criando&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após a criação da função vamos cair na tela configuração da função. Aqui podemos escolher os serviços que vão ser os gatilhos para rodar o nosso lambda, podemos trocar o runtime para outras linguagens, setar variáveis de ambientes, quantidade de memória, tempo máximo de execução, escrever o nosso código em um editor web e colocar a nossa função para executar rodando testes. Fiz um video curto explicando esse console do lambda. Veja abaixo:&lt;/p&gt;

&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;
&lt;div class=&quot;embed-container&quot;&gt;    &lt;iframe title=&quot;YouTube video player&quot; width=&quot;640&quot; height=&quot;390&quot; src=&quot;//www.youtube.com/embed/Mr2XT_6HPSo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Vamos de &lt;a href=&quot;https://aws.amazon.com/pt/cli/?nc1=h_ls&quot;&gt;awscli&lt;/a&gt;, terminal!!! Como a maioria dos serviços da AWS temos uma interface de linha de comando. Para isso você vai precisar instalar essa ferramenta em sua máquina. O awscli é feito em Python &amp;lt;3 e por esse motivo vou utilizar o pip para a sua instalação. &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/cli/latest/userguide/cli-chap-install.html&quot;&gt;Neste link você tem acesso a documentação da AWS explicando como instalar.&lt;/a&gt; Segue o comando para instalar usando o pip:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
pip install awscli

&lt;span class=&quot;c&quot;&gt;#validando se o awscli foi instalado corretamente&lt;/span&gt;

aws &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com tudo instalado agora vamos precisar configurar a sua conta e para isso vamos rodar o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws configure

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após rodar esse comando vamos precisar colocar o seu AWS Access Key ID, AWS Secret Access Key, uma região default e o formato de output.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
AWS Access Key ID &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: us-west-2
Default output format &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: json

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/pt_br/cli/latest/userguide/cli-chap-configure.html&quot;&gt;Nesse link você encontra a documentação completa e mais detalhes para realizar essa configuração.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com tudo configurado vamos dar uma olhada nos comandos do lambda rodando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2019/01/awslambda/5-aws-lambda-cli-help.gif&quot; alt=&quot;aws lambda cli help&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No help temos todos os comandos disponíveis para configurar o serviço pelo terminal. Vamos focar nesse artigo nos seguintes comandos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;aws lambda create-function&lt;/li&gt;
  &lt;li&gt;aws lambda list-functions&lt;/li&gt;
  &lt;li&gt;aws lambda update-function-code&lt;/li&gt;
  &lt;li&gt;aws lambda invoke&lt;/li&gt;
  &lt;li&gt;aws lambda delete-function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;aws lambda create-function
Como o nome já diz é função utilizada para criar uma função lambda. Vamos ao comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda create-function &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--handler&lt;/span&gt; main.handler &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--runtime&lt;/span&gt; python3.7 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'awscli-create-lambda'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--zip-file&lt;/span&gt; fileb://./awsclicreatelambda.zip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--role&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'arn:aws:iam::032292203206:role/AWSLambdaBasicExecutionRole'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;–zip-file:&lt;/strong&gt; No caso de subir um zip com menos de 10mb você deve usar o parametro –zip-file fileb://PATH_PARA_O_ZIP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;–role:&lt;/strong&gt; Aqui precisamos pegar a &lt;a href=&quot;https://docs.aws.amazon.com/pt_br/general/latest/gr/aws-arns-and-namespaces.html&quot;&gt;ARN&lt;/a&gt; da role. Neste caso você consegue essa informação acessando a sessão de IAM e navegando até a role e clicando para ver os detalhes dela.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Este é o mínimo de argumentos que você precisa passar no modo cli para criar um lambda. Como pode perceber temos um arquivo .zip que neste exemplo tem o nome de awsclicreatelambda.zip . Exatamente precisamos zipar o nosso arquivo antes de subir nossa função para o lambda. Para zipar precisamos do arquivo que vai conter a nossa função python. Abaixo segue os dados que vamos usar neste exemplo.&lt;/p&gt;

&lt;p&gt;Criando o arquivo main.py&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;

def handler(event, context):
    return {
        'texto': 'hello world lambda usando awscli',
    }

&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; main.py

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zipando o arquivo main.py&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
zip &lt;span class=&quot;nt&quot;&gt;-qr&lt;/span&gt; awsclicreatelambda.zip main.py

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora que já temos o nosso zip vamos criar a nossa função via awscli.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda create-function &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--handler&lt;/span&gt; main.handler &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--runtime&lt;/span&gt; python3.7 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'awscli-create-lambda'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--zip-file&lt;/span&gt; fileb://./awsclicreatelambda.zip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--role&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PEGUE_SUA_ARN'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se tudo ocorreu com sucesso você deve ter recebido uma resposta como essa e agora conseguimos visualizar o nosso lambda no console da aws.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;FunctionName&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;awscli-create-lambda&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;FunctionArn&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:lambda:us-east-1:XXXXXXXXX:function:awscli-create-lambda&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Runtime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;python3.7&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Role&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:iam::XXXXXXXXXXX:role/AWSLambdaBasicExecutionRole&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Handler&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;main.handler&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;CodeSize&quot;&lt;/span&gt;: 254,
  &lt;span class=&quot;s2&quot;&gt;&quot;Description&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 3,
  &lt;span class=&quot;s2&quot;&gt;&quot;MemorySize&quot;&lt;/span&gt;: 128,
  &lt;span class=&quot;s2&quot;&gt;&quot;LastModified&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2019-01-09T20:21:51.059+0000&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;CodeSha256&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;tpv2milsG+tB6qZWt4CPbtU4JxUXSxwK0aWsl0lbX6g=&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LATEST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;TracingConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Mode&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;PassThrough&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;RevisionId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;e2d3b109-1312-4eb9-80da-f8c710176541&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;aws lambda list-functions
Vamos fazer um double check e listar as funções existentes na AWS.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda list-functions

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Você deve receber uma lista com as configurações de cada lambda como essa aqui abaixo:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;Functions&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;FunctionName&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;helloworld&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;FunctionArn&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:lambda:us-east-1:XXX:function:helloworld&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Runtime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;python3.7&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Role&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:iam::XXXX:role/AWSLambdaBasicExecutionRole&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Handler&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;lambda_function.lambda_handler&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;CodeSize&quot;&lt;/span&gt;: 272,
      &lt;span class=&quot;s2&quot;&gt;&quot;Description&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 3,
      &lt;span class=&quot;s2&quot;&gt;&quot;MemorySize&quot;&lt;/span&gt;: 128,
      &lt;span class=&quot;s2&quot;&gt;&quot;LastModified&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2019-01-08T23:32:13.046+0000&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;CodeSha256&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Amrs9cH7J7bkB5kMuvxiVzodlZCSee1bcSZFN4KjNLs=&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LATEST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;VpcConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;SubnetIds&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;SecurityGroupIds&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;VpcId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Environment&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;Variables&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;s2&quot;&gt;&quot;TESTE&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;LALA&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;TracingConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;Mode&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;PassThrough&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;RevisionId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;863e4b1e-99cd-4cfc-8f8c-0644af4d5b38&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;FunctionName&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;awscli-create-lambda&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;FunctionArn&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:lambda:us-east-1:XXXXX:function:awscli-create-lambda&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Runtime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;python3.7&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Role&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:iam::XXXXXXXX:role/AWSLambdaBasicExecutionRole&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Handler&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;main.handler&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;CodeSize&quot;&lt;/span&gt;: 254,
      &lt;span class=&quot;s2&quot;&gt;&quot;Description&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 3,
      &lt;span class=&quot;s2&quot;&gt;&quot;MemorySize&quot;&lt;/span&gt;: 128,
      &lt;span class=&quot;s2&quot;&gt;&quot;LastModified&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2019-01-09T20:21:51.059+0000&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;CodeSha256&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;tpv2milsG+tB6qZWt4CPbtU4JxUXSxwK0aWsl0lbX6g=&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;Version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LATEST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;TracingConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;Mode&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;PassThrough&quot;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
      &lt;span class=&quot;s2&quot;&gt;&quot;RevisionId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;e2d3b109-1312-4eb9-80da-f8c710176541&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;aws lambda update-function-code
Para atualizar o codigo lambda basta rodar o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda update-function-code &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'awscli-create-lambda'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--zip-file&lt;/span&gt; fileb://./awsclicreatelambda.zip

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Este é o output esperado:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;FunctionName&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;awscli-create-lambda&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;FunctionArn&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:lambda:us-east-1:XXXX:function:awscli-create-lambda&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Runtime&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;python3.7&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Role&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;arn:aws:iam::XXXX:role/AWSLambdaBasicExecutionRole&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Handler&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;main.handler&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;CodeSize&quot;&lt;/span&gt;: 254,
  &lt;span class=&quot;s2&quot;&gt;&quot;Description&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 3,
  &lt;span class=&quot;s2&quot;&gt;&quot;MemorySize&quot;&lt;/span&gt;: 128,
  &lt;span class=&quot;s2&quot;&gt;&quot;LastModified&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2019-01-09T20:41:49.473+0000&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;CodeSha256&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;tpv2milsG+tB6qZWt4CPbtU4JxUXSxwK0aWsl0lbX6g=&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;Version&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LATEST&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;TracingConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Mode&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;PassThrough&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;RevisionId&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2ae6d782-dde0-41d1-8227-db3bfa23d30f&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;aws lambda invoke
Executando um lambda precisamos passar o nome da função, o paylod que neste caso tem que ser um json e passar um arquivo onde vai ser escrito a resposta dessa invocação.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda invoke &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'awscli-create-lambda'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--payload&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{}'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
awsclicreatelambda.output

&lt;span class=&quot;c&quot;&gt;# para ver o resultado basta agora dar um cat no arquivo&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;awsclicreatelambda.output

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;aws lambda delete-function&lt;/p&gt;

&lt;p&gt;Vamos remover este lambda recem criado rodando o comando delete-function. Este comando não tem output.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
aws lambda delete-function &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--region&lt;/span&gt; us-east-1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--function-name&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'awscli-create-lambda'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para facilitar também criei este &lt;a href=&quot;https://gist.github.com/rtancman/240e67545a4dbde5107cd1dd09df014b&quot;&gt;gist no github&lt;/a&gt; com todos os comandos que executamos em sequência.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/240e67545a4dbde5107cd1dd09df014b.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Neste post procurei mostrar o funcionamento básico do lambda e as diversas formas que podemos manipular as nossas funções que podem ser feitas via console da AWS ou utilizando o utilitário awscli. Fique ligado que nos próximos posts vou mostrar como podemos otimizar toda essa configuração utilizando o framework &lt;a href=&quot;http://apex.run/&quot;&gt;apex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Veja como &lt;a href=&quot;/python/aws/organizando-aws-lambda-escrito-python.html&quot;&gt;organizar o ambiente de trabalho com apex.run e entenda as pegadinhas em utilizar Python no AWS Lambda.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comente sobre o que você achou desse post e me conte o você quer saber ou fazer utilizando Python e Lambdas.&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Vamos falar de AWS, vamos falar de lambdas e de python! Isso mesmo, nesse artigo vou começar uma série de posts sobre essas tecnologias.</summary></entry><entry><title type="html">Dia a dia de um dev remoto</title><link href="https://www.rtancman.com.br/soudev/dia-a-dia-de-um-dev-remoto.html" rel="alternate" type="text/html" title="Dia a dia de um dev remoto" /><published>2018-11-24T14:10:00+00:00</published><updated>2018-11-24T14:10:00+00:00</updated><id>https://www.rtancman.com.br/soudev/dia-a-dia-de-um-dev-remoto</id><content type="html" xml:base="https://www.rtancman.com.br/soudev/dia-a-dia-de-um-dev-remoto.html">&lt;p&gt;Nossa você trabalha de casa? É essa pergunta cada vez mais vem se tornando comum no universo dos devs. Trabalho remoto hoje ao meu ver é essencial para facilitar a correria do dia a dia. Acordar, tomar aquele café e sentar na frente do pc e começar a trabalhar é maravilhoso! Nesse post não vou contar os prós e contras dessa forma de trabalho mas sim vou contar um pouco do meu dia a dia e das ferramentas que utilizo.&lt;/p&gt;

&lt;p&gt;Atualmente trabalho remoto para a &lt;a href=&quot;https://resultadosdigitais.com.br/&quot;&gt;Resultados Digitais&lt;/a&gt;. O time no qual eu trabalho tem todo um esquema que facilita e integra as pessoas que não estão presentes no mesmo local físico. Estamos sempre num ciclo de aprendizado testando processos e ferramentas para melhorar toda a nossa comunicação.&lt;/p&gt;

&lt;h2 id=&quot;comunicação&quot;&gt;Comunicação&lt;/h2&gt;

&lt;p&gt;Esse é um dos pontos mais importantes. Toda comunicação fica centralizada em um canal do time no Slack ou seja abusamos da comunicação assíncrona. Para não perder nenhuma informação é muito importante ter tudo documentado para quem não esteja presente naquele momento tenha o entendimento do que está acontecendo posteriormente.&lt;/p&gt;

&lt;p&gt;No caso de uma reunião, procuramos sempre que possível agendar no Google Calendar ou quando precisamos ser mais ágeis iniciamos uma thread no canal. A reunião é feita em uma sala virtual onde toda a conversa vai para um doc que em seguida é compartilhado com o time.&lt;/p&gt;

&lt;p&gt;Passamos a utilizar uma ferramenta chamada &lt;a href=&quot;https://www.sococo.com/&quot;&gt;Sococo&lt;/a&gt;. É uma ferramenta de comunicação que simula o ambiente da sua empresa virtualmente. Basicamente ele segue o modelo de salas que temos em um escritório físico facilitando a visualização de onde está cada integrante do time. Além disso ele tem algumas formas de imitar ambiente físico onde você pode bater na porta de uma sala para participar de uma reunião por exemplo que esteja acontecendo. Você já entra na sala e vê o que os participantes estão fazendo podendo iteragir com eles normalmente como no dia a dia como acontece numa sala física. Abaixo uma imagem de como é a ferramenta.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018/11/sococo.jpg&quot; alt=&quot;Sococo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Eu trabalhei antes sem o Sococo e posso te afirmar que me sinto muito mais integrado com o time. O simples fato de simular o dia a dia físico em um software remoto muda a experiência do trabalho remoto fazendo com que todos se sintam mais próximos uns dos outros. Não deixamos de usar Slack. Pode parecer estranho, mas minha experiência no dia a dia é que os dois se complementam cada um com o seu devido valor.&lt;/p&gt;

&lt;p&gt;Também utilizamos o &lt;a href=&quot;https://trello.com&quot;&gt;Trello&lt;/a&gt; onde todo trabalho em andamento fica visível por lá criando um modelo mental compartilhado entre o time para saber o que cada um está fazendo naquele momento.&lt;/p&gt;

&lt;h2 id=&quot;pair-programing&quot;&gt;Pair programing&lt;/h2&gt;

&lt;p&gt;Nosso time utiliza muito dessa ferramenta e vou te dizer É FANTÁSTICO e muito valioso para o produto. O foco não aqui não é explicar o que é essa ferramenta mas sim como trabalhamos com ela de maneira remota. Todo nosso desenvolvimento é feito em par. Seja ele na parte de entendimento, planejamento da solução a ser desenvolvida ou no desenvolvimento propriamente dito.&lt;/p&gt;

&lt;p&gt;Na parte de análise de solução, geralmente abrimos um doc no Google Drive e vamos discutindo e desenhando juntos a solução. Nesse momento juntamos os envolvidos em uma sala do Sococo onde além de debater compartilhamos a tela um do outro para mostrar alguma ideia. Procuramos seguir uma dinâmica de como se estivessemos um ao lado do outro rabiscando em uma folha de papel, mostrando sites com algum conteúdo ou documento para auxiliar no processo. Após o trabalho estar finalizado ainda contamos com a revisão de outros membros do time para seguir em diante. Nesse momento passamos para a fase de mão na massa ou seja coding!&lt;/p&gt;

&lt;p&gt;No pair programing como o XP manda, sempre temos piloto e copiloto. Quem está pilotando normalmente compartilha a sua tela e vamos discutindo e escrevendo juntos o código para resolver o problema. Essa parte não estava sendo muito dinâmica devido ao fato de não ter uma forma fácil e rápida para rotacionar o piloto e copiloto. O trabalho se torna muito cansativo principalmente para quem esta de copiloto. Algumas vezes o compartilhamento de telas trava e algumas coisas ficam dificil de se ler.&lt;/p&gt;

&lt;p&gt;Para resolver este problema começamos a testar ferramentas que compartilham a IDE e o terminal de trabalho. As que vem se mostrando interessantes para se trabalhar são a &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack&quot;&gt;VS Live Share&lt;/a&gt; que é um plugin para o VSCode e o tmux para compartilhar a sessão de um terminal usando o &lt;a href=&quot;https://tmate.io/&quot;&gt;tmate&lt;/a&gt;. Muitas pessoas do time usam o Vim + tmux como ferramenta de trabalho e o tmate ajuda muito nesse contexto. Essas duas práticas vem ajudando muito no dinamismo do pair programing remoto onde todos conseguem manipular o mesmo código e ter acesso ao terminal. Com isso rodar os testes e realizar o commit de maneira remota ficou muito mais simples e dinâmico igual ao que fazemos no dia a dia quando estamos um do lado do outro trabalhando na mesma máquina.&lt;/p&gt;

&lt;h2 id=&quot;dicas&quot;&gt;Dicas&lt;/h2&gt;

&lt;p&gt;Trabalhar remoto é uma realidade! Cada vez mais acredito nessa prática e diversas empresas tem adotado essa opção para melhorar a qualidade de vida do profissional, diminuir os custos de ter um espaço físico e principalmente contratar profissionais.&lt;/p&gt;

&lt;p&gt;Ferramentas que utilizo no dia a dia que podem te ajudar a se organizar são elas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://trello.com&quot;&gt;Trello&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Tmux&quot;&gt;Tmux&lt;/a&gt; e &lt;a href=&quot;https://tmate.io/&quot;&gt;Tmate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt; e &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack&quot;&gt;VS Live Share&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sococo.com/&quot;&gt;Sococo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/drive/&quot;&gt;Google Drive&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/calendar&quot;&gt;Google Calendar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recomendo também MUITO a leitura desses posts que focam em boas práticas para facilitar o seu dia a dia remoto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/rd-shipit/o-guia-do-trabalho-remoto-segundo-especialistas-55cbff2e111b&quot;&gt;O Guia do Trabalho Remoto — segundo especialistas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://shipit.resultadosdigitais.com.br/blog/6-dicas-para-ser-mais-produtivo-no-home-office/&quot;&gt;6 dicas para ser mais produtivo no home office&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Nossa você trabalha de casa? É essa pergunta cada vez mais vem se tornando comum no universo dos devs. Trabalho remoto hoje ao meu ver é essencial para facilitar a correria do dia a dia. Acordar, tomar aquele café e sentar na frente do pc e começar a trabalhar é maravilhoso! Nesse post não vou contar os prós e contras dessa forma de trabalho mas sim vou contar um pouco do meu dia a dia e das ferramentas que utilizo.</summary></entry><entry><title type="html">Vim e tmux</title><link href="https://www.rtancman.com.br/soudev/vim-e-tmux-minha-configuracao.html" rel="alternate" type="text/html" title="Vim e tmux" /><published>2018-11-23T21:28:00+00:00</published><updated>2018-11-23T21:28:00+00:00</updated><id>https://www.rtancman.com.br/soudev/vim-e-tmux-minha-configuracao</id><content type="html" xml:base="https://www.rtancman.com.br/soudev/vim-e-tmux-minha-configuracao.html">&lt;p&gt;Sempre programando com outras ferramentas de fato resolvi dar uma chance ao &lt;a href=&quot;https://en.wikipedia.org/wiki/Vim_(text_editor)&quot;&gt;Vim&lt;/a&gt;. Com os plugins ele vira uma baita de uma ferramenta para se trabalhar. Sobre o &lt;a href=&quot;https://en.wikipedia.org/wiki/Tmux&quot;&gt;tmux&lt;/a&gt; foi um caso de amor e ódio. Comecei acompanhar os amigos aqui do time quando estávamos “pareando” e resolvi de fato testar no dia a dia.&lt;/p&gt;

&lt;h2 id=&quot;vim&quot;&gt;Vim&lt;/h2&gt;

&lt;p&gt;Wiki: &lt;a href=&quot;https://en.wikipedia.org/wiki/Vim_(text_editor)&quot;&gt;https://en.wikipedia.org/wiki/Vim_(text_editor)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;É um editor de texto clonado a partir do &lt;a href=&quot;https://pt.wikipedia.org/wiki/Vi&quot;&gt;Vi&lt;/a&gt; que pode ser utilizado tanto no terminal ou como uma aplicação gráfica como no gvim além de ser um software livre de código aberto.&lt;/p&gt;

&lt;p&gt;Para aprender sobre o vim recomendo os seguintes sites:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/upcase/vim&quot;&gt;https://thoughtbot.com/upcase/vim&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://vim-adventures.com/&quot;&gt;https://vim-adventures.com/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A parte que eu gosto desse editor a sua simplicidade, leveza e o além de facilmente rodar a minha configuração em um servidor ou em outra máquina. Outro ponto favorável é sua gama de plugins. Neste site &lt;a href=&quot;https://vimawesome.com/&quot;&gt;vim awesome&lt;/a&gt; você consegue buscar e encontrar plugins. Esta parte pode se tornar um pouco trabalhosa e por este motivo eu comecei configurando o meu Vim com base no projeto &lt;a href=&quot;https://vim-bootstrap.com/&quot;&gt;vim-bootstrap&lt;/a&gt;. Este projeto facilita a configuração sugerindo plugins ideias a várias linguagem de programação.&lt;/p&gt;

&lt;p&gt;Toda sua configuração do vim fica em um arquivo na sua home que é o ~/.vimrc . &lt;a href=&quot;https://github.com/rtancman/dotfiles/blob/master/sh/common/vim-bootstrap/main.sh&quot;&gt;Aqui&lt;/a&gt; eu acabei automatizando esse processo de instalação do vim-bootsrap onde ele gera essas configurações e salva no .vimrc na home da sua máquina. Além desse arquivo eu crio mais 2 arquivos que são os ~/.vimrc.local e o ~/.vimrc.local.bundles . Eu gerei estes arquivos para facilitar a alteração de algumas configurações além do vim-bootstrap sem correr o risco de um sobrescrever o outro.&lt;/p&gt;

&lt;p&gt;Conteúdo do meu ~/.vimrc.local
Neste arquivo eu coloco outras configurações para o meu vim além das que existem no ~/.vimrc.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot; Config
&quot; set relativenumber
set nrformats+=alpha
let g:NERDTreeMapOpenInTabSilent = 'T'

&quot; Ruby Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_ruby_checkers = ['rubocop', 'reek']
let g:vimrubocop_config = '.rubocop.yml'
let g:reek_on_loading = 0

&quot; Remove Trailing Whitespace
nnoremap &amp;lt;silent&amp;gt; &amp;lt;F5&amp;gt; :let _s=@/ &amp;lt;Bar&amp;gt; :%s/\s\+$//e &amp;lt;Bar&amp;gt; :let @/=_s &amp;lt;Bar&amp;gt; :nohl &amp;lt;Bar&amp;gt; :unlet _s &amp;lt;CR&amp;gt;

&quot; vim-javascript
augroup vimrc-javascript
autocmd!
autocmd FileType javascript,javascript.jsx set tabstop=2|set shiftwidth=2|set expandtab softtabstop=2
augroup END

&quot; Vim autoresize
autocmd VimResized * :wincmd =
&quot; zoom a vim pane, &amp;lt;C-w&amp;gt;= to re-balance
nnoremap &amp;lt;leader&amp;gt;- :wincmd _&amp;lt;cr&amp;gt;:wincmd \|&amp;lt;cr&amp;gt;
nnoremap &amp;lt;leader&amp;gt;= :wincmd =&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Conteúdo do meu ~/.vimrc.local.bundles
Neste arquivo eu inclou outros plugins além das que existem no ~/.vimrc.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot; Plugins
Plug 'wakatime/vim-wakatime'
Plug 'ngmy/vim-rubocop'
Plug 'rainerborene/vim-reek'
Plug 'terryma/vim-multiple-cursors'
Plug 'mxw/vim-jsx'
&quot; Plug 'w0rp/ale'
Plug 'christoomey/vim-tmux-navigator'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tmux&quot;&gt;Tmux&lt;/h2&gt;

&lt;p&gt;É um multiplexador de terminais para sistemas Unix like. Ou seja conseguimos abrir vários terminais no mesmo terminal. Além disso, conseguimos “salvar” o estado atual de cada sessão aberta no terminal e retomar de onde paramos. No nosso dia a dia abrimos varios terminais para executar diversas ações e é ae que o tmux entra para facilitar a sua vida. Ele se torna uma ferramenta muito poderosa usada em conjunto com o Vim.&lt;/p&gt;

&lt;p&gt;Para aprender sobre o tmux recomendo os seguintes sites:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://thoughtbot.com/upcase/tmux&quot;&gt;https://thoughtbot.com/upcase/tmux&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://gist.github.com/henrik/1967800&quot;&gt;https://gist.github.com/henrik/1967800&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://lukaszwrobel.pl/blog/tmux-tutorial-split-terminal-windows-easily/&quot;&gt;https://lukaszwrobel.pl/blog/tmux-tutorial-split-terminal-windows-easily/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como o vim ele suporta diversas configurações e isso que faz ele ficar bem produtivo no seu dia a dia. Abaixo eu estou compartilhando as minhas que acabei adotando após finalizar o curso da Upcase.&lt;/p&gt;

&lt;p&gt;Conteúdo do meu ~/.tmux.conf&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unbind C-b
set -g prefix C-s
set -g base-index 1
set -g renumber-windows on
bind-key -r C-s send-prefix
bind-key r source-file ~/.tmux.conf \; display-message &quot;~/.tmux.conf reloaded&quot;
set-option -g default-terminal &quot;screen-256color&quot;
set-option -g status-keys &quot;emacs&quot;
#set-option -g status-bg '#666666'
#set-option -g status-fg '#aaaaaa'
set-option -g status-left-length 50
set-option -g status-right &quot; #(date '+%a, %b %d - %I:%M') &quot;
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind c new-window -c &quot;#{pane_current_path}&quot;
bind-key b break-pane -d
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo &quot;#{pane_current_command}&quot; | grep -iqE &quot;(^|\/)g?(view|n?vim?)(diff)?$&quot;'
bind -n C-h if-shell &quot;$is_vim&quot; &quot;send-keys C-h&quot; &quot;select-pane -L&quot;
bind -n C-j if-shell &quot;$is_vim&quot; &quot;send-keys C-j&quot; &quot;select-pane -D&quot;
bind -n C-k if-shell &quot;$is_vim&quot; &quot;send-keys C-k&quot; &quot;select-pane -U&quot;
#bind -n C-l if-shell &quot;$is_vim&quot; &quot;send-keys C-l&quot; &quot;select-pane -R&quot;
bind -n C-\ if-shell &quot;$is_vim&quot; &quot;send-keys C-\\&quot; &quot;select-pane -l&quot;

# Quickly view system &amp;amp; process info in htop
bind-key h split-window -h &quot;htop&quot;

# Quickly edit todo list
bind-key t split-window -h &quot;vim ~/todo.md&quot;

# Prompted join-pane
bind-key j command-prompt -p &quot;join pane from: &quot; &quot;join-pane -h -s '%%'&quot;

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p &quot;pane #: &quot; &quot;swap-pane -t '%%'&quot;

# Breaking Out Sessions
bind-key C-b send-keys 'tat &amp;amp;&amp;amp; exit' 'C-m'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Neste post eu trouxe essas duas ferramentas que me ajudam bastante no meu dia a dia caso você tenha alguma configuração legal para o tmux ou vim compartilhe nos comentários.&lt;/p&gt;

&lt;p&gt;Grande abraço!&lt;/p&gt;</content><author><name>Raffael Tancman</name></author><summary type="html">Sempre programando com outras ferramentas de fato resolvi dar uma chance ao Vim. Com os plugins ele vira uma baita de uma ferramenta para se trabalhar. Sobre o tmux foi um caso de amor e ódio. Comecei acompanhar os amigos aqui do time quando estávamos “pareando” e resolvi de fato testar no dia a dia.</summary></entry></feed>